
project1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001570  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000013c  08001700  08001700  00002700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800183c  0800183c  000030a4  2**0
                  CONTENTS
  4 .ARM          00000008  0800183c  0800183c  0000283c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001844  08001844  000030a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001844  08001844  00002844  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001848  08001848  00002848  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000a4  20000000  0800184c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000030a4  2**0
                  CONTENTS
 10 .bss          0000016c  200000a4  200000a4  000030a4  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000210  20000210  000030a4  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000030a4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000acf  00000000  00000000  000030ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003f0  00000000  00000000  00003b9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000138  00000000  00000000  00003f90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d7  00000000  00000000  000040c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002d46  00000000  00000000  0000419f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000015f5  00000000  00000000  00006ee5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000097d4  00000000  00000000  000084da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00011cae  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000e58  00000000  00000000  00011cf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000077  00000000  00000000  00012b4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200000a4 	.word	0x200000a4
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080016e8 	.word	0x080016e8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200000a8 	.word	0x200000a8
 80001cc:	080016e8 	.word	0x080016e8

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	b084      	sub	sp, #16
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
 8000278:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800027a:	2300      	movs	r3, #0
 800027c:	60fb      	str	r3, [r7, #12]
 800027e:	e015      	b.n	80002ac <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 8000280:	f000 fa0a 	bl	8000698 <rand>
 8000284:	4602      	mov	r2, r0
 8000286:	68fb      	ldr	r3, [r7, #12]
 8000288:	009b      	lsls	r3, r3, #2
 800028a:	6879      	ldr	r1, [r7, #4]
 800028c:	4419      	add	r1, r3
 800028e:	4b0c      	ldr	r3, [pc, #48]	@ (80002c0 <array_fill_numbers+0x50>)
 8000290:	fb83 0302 	smull	r0, r3, r3, r2
 8000294:	1198      	asrs	r0, r3, #6
 8000296:	17d3      	asrs	r3, r2, #31
 8000298:	1ac3      	subs	r3, r0, r3
 800029a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800029e:	fb00 f303 	mul.w	r3, r0, r3
 80002a2:	1ad3      	subs	r3, r2, r3
 80002a4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	3301      	adds	r3, #1
 80002aa:	60fb      	str	r3, [r7, #12]
 80002ac:	68fa      	ldr	r2, [r7, #12]
 80002ae:	683b      	ldr	r3, [r7, #0]
 80002b0:	429a      	cmp	r2, r3
 80002b2:	d3e5      	bcc.n	8000280 <array_fill_numbers+0x10>
    }

}
 80002b4:	bf00      	nop
 80002b6:	bf00      	nop
 80002b8:	3710      	adds	r7, #16
 80002ba:	46bd      	mov	sp, r7
 80002bc:	bd80      	pop	{r7, pc}
 80002be:	bf00      	nop
 80002c0:	10624dd3 	.word	0x10624dd3

080002c4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b086      	sub	sp, #24
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	60f8      	str	r0, [r7, #12]
 80002cc:	60b9      	str	r1, [r7, #8]
 80002ce:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002d0:	6879      	ldr	r1, [r7, #4]
 80002d2:	480e      	ldr	r0, [pc, #56]	@ (800030c <display_numbers+0x48>)
 80002d4:	f000 fae0 	bl	8000898 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002d8:	2300      	movs	r3, #0
 80002da:	617b      	str	r3, [r7, #20]
 80002dc:	e00b      	b.n	80002f6 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002de:	697b      	ldr	r3, [r7, #20]
 80002e0:	009b      	lsls	r3, r3, #2
 80002e2:	68fa      	ldr	r2, [r7, #12]
 80002e4:	4413      	add	r3, r2
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	4619      	mov	r1, r3
 80002ea:	4809      	ldr	r0, [pc, #36]	@ (8000310 <display_numbers+0x4c>)
 80002ec:	f000 fad4 	bl	8000898 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 80002f0:	697b      	ldr	r3, [r7, #20]
 80002f2:	3301      	adds	r3, #1
 80002f4:	617b      	str	r3, [r7, #20]
 80002f6:	697a      	ldr	r2, [r7, #20]
 80002f8:	68bb      	ldr	r3, [r7, #8]
 80002fa:	429a      	cmp	r2, r3
 80002fc:	d3ef      	bcc.n	80002de <display_numbers+0x1a>
    }

    printf("\n");
 80002fe:	200a      	movs	r0, #10
 8000300:	f000 fadc 	bl	80008bc <putchar>
}
 8000304:	bf00      	nop
 8000306:	3718      	adds	r7, #24
 8000308:	46bd      	mov	sp, r7
 800030a:	bd80      	pop	{r7, pc}
 800030c:	08001700 	.word	0x08001700
 8000310:	08001704 	.word	0x08001704

08000314 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000314:	b480      	push	{r7}
 8000316:	b085      	sub	sp, #20
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
 800031c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000324:	683b      	ldr	r3, [r7, #0]
 8000326:	681a      	ldr	r2, [r3, #0]
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800032c:	683b      	ldr	r3, [r7, #0]
 800032e:	68fa      	ldr	r2, [r7, #12]
 8000330:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000332:	4b04      	ldr	r3, [pc, #16]	@ (8000344 <swap_numbers+0x30>)
 8000334:	220a      	movs	r2, #10
 8000336:	601a      	str	r2, [r3, #0]
}
 8000338:	bf00      	nop
 800033a:	3714      	adds	r7, #20
 800033c:	46bd      	mov	sp, r7
 800033e:	bc80      	pop	{r7}
 8000340:	4770      	bx	lr
 8000342:	bf00      	nop
 8000344:	20000044 	.word	0x20000044

08000348 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000348:	b580      	push	{r7, lr}
 800034a:	b086      	sub	sp, #24
 800034c:	af00      	add	r7, sp, #0
 800034e:	6078      	str	r0, [r7, #4]
 8000350:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000352:	2300      	movs	r3, #0
 8000354:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000356:	2300      	movs	r3, #0
 8000358:	617b      	str	r3, [r7, #20]
 800035a:	e02f      	b.n	80003bc <bubble_sort+0x74>
    {
        flag=0;
 800035c:	2300      	movs	r3, #0
 800035e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000360:	2300      	movs	r3, #0
 8000362:	613b      	str	r3, [r7, #16]
 8000364:	e01d      	b.n	80003a2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000366:	693b      	ldr	r3, [r7, #16]
 8000368:	009b      	lsls	r3, r3, #2
 800036a:	687a      	ldr	r2, [r7, #4]
 800036c:	4413      	add	r3, r2
 800036e:	681a      	ldr	r2, [r3, #0]
 8000370:	693b      	ldr	r3, [r7, #16]
 8000372:	3301      	adds	r3, #1
 8000374:	009b      	lsls	r3, r3, #2
 8000376:	6879      	ldr	r1, [r7, #4]
 8000378:	440b      	add	r3, r1
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	429a      	cmp	r2, r3
 800037e:	dd0d      	ble.n	800039c <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000380:	693b      	ldr	r3, [r7, #16]
 8000382:	009b      	lsls	r3, r3, #2
 8000384:	687a      	ldr	r2, [r7, #4]
 8000386:	18d0      	adds	r0, r2, r3
 8000388:	693b      	ldr	r3, [r7, #16]
 800038a:	3301      	adds	r3, #1
 800038c:	009b      	lsls	r3, r3, #2
 800038e:	687a      	ldr	r2, [r7, #4]
 8000390:	4413      	add	r3, r2
 8000392:	4619      	mov	r1, r3
 8000394:	f7ff ffbe 	bl	8000314 <swap_numbers>
                flag=1;
 8000398:	2301      	movs	r3, #1
 800039a:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 800039c:	693b      	ldr	r3, [r7, #16]
 800039e:	3301      	adds	r3, #1
 80003a0:	613b      	str	r3, [r7, #16]
 80003a2:	697b      	ldr	r3, [r7, #20]
 80003a4:	683a      	ldr	r2, [r7, #0]
 80003a6:	1ad3      	subs	r3, r2, r3
 80003a8:	1e5a      	subs	r2, r3, #1
 80003aa:	693b      	ldr	r3, [r7, #16]
 80003ac:	429a      	cmp	r2, r3
 80003ae:	d8da      	bhi.n	8000366 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003b0:	68fb      	ldr	r3, [r7, #12]
 80003b2:	2b00      	cmp	r3, #0
 80003b4:	d008      	beq.n	80003c8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003b6:	697b      	ldr	r3, [r7, #20]
 80003b8:	3301      	adds	r3, #1
 80003ba:	617b      	str	r3, [r7, #20]
 80003bc:	683b      	ldr	r3, [r7, #0]
 80003be:	1e5a      	subs	r2, r3, #1
 80003c0:	697b      	ldr	r3, [r7, #20]
 80003c2:	429a      	cmp	r2, r3
 80003c4:	d8ca      	bhi.n	800035c <bubble_sort+0x14>
            break;
    }
}
 80003c6:	e000      	b.n	80003ca <bubble_sort+0x82>
            break;
 80003c8:	bf00      	nop
}
 80003ca:	bf00      	nop
 80003cc:	3718      	adds	r7, #24
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bd80      	pop	{r7, pc}

080003d2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b087      	sub	sp, #28
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	6078      	str	r0, [r7, #4]
 80003da:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003dc:	2301      	movs	r3, #1
 80003de:	617b      	str	r3, [r7, #20]
 80003e0:	e02c      	b.n	800043c <insertion_sort+0x6a>
     {
         j=i-1;
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	3b01      	subs	r3, #1
 80003e6:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80003e8:	697b      	ldr	r3, [r7, #20]
 80003ea:	009b      	lsls	r3, r3, #2
 80003ec:	687a      	ldr	r2, [r7, #4]
 80003ee:	4413      	add	r3, r2
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 80003f4:	e00d      	b.n	8000412 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 80003f6:	693b      	ldr	r3, [r7, #16]
 80003f8:	009b      	lsls	r3, r3, #2
 80003fa:	687a      	ldr	r2, [r7, #4]
 80003fc:	441a      	add	r2, r3
 80003fe:	693b      	ldr	r3, [r7, #16]
 8000400:	3301      	adds	r3, #1
 8000402:	009b      	lsls	r3, r3, #2
 8000404:	6879      	ldr	r1, [r7, #4]
 8000406:	440b      	add	r3, r1
 8000408:	6812      	ldr	r2, [r2, #0]
 800040a:	601a      	str	r2, [r3, #0]
             j--;
 800040c:	693b      	ldr	r3, [r7, #16]
 800040e:	3b01      	subs	r3, #1
 8000410:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000412:	693b      	ldr	r3, [r7, #16]
 8000414:	2b00      	cmp	r3, #0
 8000416:	db07      	blt.n	8000428 <insertion_sort+0x56>
 8000418:	693b      	ldr	r3, [r7, #16]
 800041a:	009b      	lsls	r3, r3, #2
 800041c:	687a      	ldr	r2, [r7, #4]
 800041e:	4413      	add	r3, r2
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	68fa      	ldr	r2, [r7, #12]
 8000424:	429a      	cmp	r2, r3
 8000426:	dbe6      	blt.n	80003f6 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000428:	693b      	ldr	r3, [r7, #16]
 800042a:	3301      	adds	r3, #1
 800042c:	009b      	lsls	r3, r3, #2
 800042e:	687a      	ldr	r2, [r7, #4]
 8000430:	4413      	add	r3, r2
 8000432:	68fa      	ldr	r2, [r7, #12]
 8000434:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000436:	697b      	ldr	r3, [r7, #20]
 8000438:	3301      	adds	r3, #1
 800043a:	617b      	str	r3, [r7, #20]
 800043c:	697b      	ldr	r3, [r7, #20]
 800043e:	683a      	ldr	r2, [r7, #0]
 8000440:	429a      	cmp	r2, r3
 8000442:	d8ce      	bhi.n	80003e2 <insertion_sort+0x10>
     }


}
 8000444:	bf00      	nop
 8000446:	bf00      	nop
 8000448:	371c      	adds	r7, #28
 800044a:	46bd      	mov	sp, r7
 800044c:	bc80      	pop	{r7}
 800044e:	4770      	bx	lr

08000450 <main>:



int main()
{
 8000450:	b580      	push	{r7, lr}
 8000452:	b082      	sub	sp, #8
 8000454:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 8000456:	2311      	movs	r3, #17
 8000458:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800045a:	6879      	ldr	r1, [r7, #4]
 800045c:	4813      	ldr	r0, [pc, #76]	@ (80004ac <main+0x5c>)
 800045e:	f7ff ff07 	bl	8000270 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000462:	4a13      	ldr	r2, [pc, #76]	@ (80004b0 <main+0x60>)
 8000464:	6879      	ldr	r1, [r7, #4]
 8000466:	4811      	ldr	r0, [pc, #68]	@ (80004ac <main+0x5c>)
 8000468:	f7ff ff2c 	bl	80002c4 <display_numbers>

    bubble_sort(numbers,len);
 800046c:	6879      	ldr	r1, [r7, #4]
 800046e:	480f      	ldr	r0, [pc, #60]	@ (80004ac <main+0x5c>)
 8000470:	f7ff ff6a 	bl	8000348 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000474:	4a0f      	ldr	r2, [pc, #60]	@ (80004b4 <main+0x64>)
 8000476:	6879      	ldr	r1, [r7, #4]
 8000478:	480c      	ldr	r0, [pc, #48]	@ (80004ac <main+0x5c>)
 800047a:	f7ff ff23 	bl	80002c4 <display_numbers>

    array_fill_numbers(numbers,len);
 800047e:	6879      	ldr	r1, [r7, #4]
 8000480:	480a      	ldr	r0, [pc, #40]	@ (80004ac <main+0x5c>)
 8000482:	f7ff fef5 	bl	8000270 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 8000486:	4a0c      	ldr	r2, [pc, #48]	@ (80004b8 <main+0x68>)
 8000488:	6879      	ldr	r1, [r7, #4]
 800048a:	4808      	ldr	r0, [pc, #32]	@ (80004ac <main+0x5c>)
 800048c:	f7ff ff1a 	bl	80002c4 <display_numbers>

    insertion_sort(numbers,len);
 8000490:	6879      	ldr	r1, [r7, #4]
 8000492:	4806      	ldr	r0, [pc, #24]	@ (80004ac <main+0x5c>)
 8000494:	f7ff ff9d 	bl	80003d2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 8000498:	4a08      	ldr	r2, [pc, #32]	@ (80004bc <main+0x6c>)
 800049a:	6879      	ldr	r1, [r7, #4]
 800049c:	4803      	ldr	r0, [pc, #12]	@ (80004ac <main+0x5c>)
 800049e:	f7ff ff11 	bl	80002c4 <display_numbers>



    return 0;
 80004a2:	2300      	movs	r3, #0
}
 80004a4:	4618      	mov	r0, r3
 80004a6:	3708      	adds	r7, #8
 80004a8:	46bd      	mov	sp, r7
 80004aa:	bd80      	pop	{r7, pc}
 80004ac:	20000000 	.word	0x20000000
 80004b0:	0800170c 	.word	0x0800170c
 80004b4:	08001720 	.word	0x08001720
 80004b8:	08001734 	.word	0x08001734
 80004bc:	08001748 	.word	0x08001748

080004c0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80004c0:	b480      	push	{r7}
 80004c2:	af00      	add	r7, sp, #0
  return 1;
 80004c4:	2301      	movs	r3, #1
}
 80004c6:	4618      	mov	r0, r3
 80004c8:	46bd      	mov	sp, r7
 80004ca:	bc80      	pop	{r7}
 80004cc:	4770      	bx	lr

080004ce <_kill>:

int _kill(int pid, int sig)
{
 80004ce:	b580      	push	{r7, lr}
 80004d0:	b082      	sub	sp, #8
 80004d2:	af00      	add	r7, sp, #0
 80004d4:	6078      	str	r0, [r7, #4]
 80004d6:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80004d8:	f000 fa8a 	bl	80009f0 <__errno>
 80004dc:	4603      	mov	r3, r0
 80004de:	2216      	movs	r2, #22
 80004e0:	601a      	str	r2, [r3, #0]
  return -1;
 80004e2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004e6:	4618      	mov	r0, r3
 80004e8:	3708      	adds	r7, #8
 80004ea:	46bd      	mov	sp, r7
 80004ec:	bd80      	pop	{r7, pc}

080004ee <_exit>:

void _exit (int status)
{
 80004ee:	b580      	push	{r7, lr}
 80004f0:	b082      	sub	sp, #8
 80004f2:	af00      	add	r7, sp, #0
 80004f4:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80004f6:	f04f 31ff 	mov.w	r1, #4294967295
 80004fa:	6878      	ldr	r0, [r7, #4]
 80004fc:	f7ff ffe7 	bl	80004ce <_kill>
  while (1) {}    /* Make sure we hang here */
 8000500:	bf00      	nop
 8000502:	e7fd      	b.n	8000500 <_exit+0x12>

08000504 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b086      	sub	sp, #24
 8000508:	af00      	add	r7, sp, #0
 800050a:	60f8      	str	r0, [r7, #12]
 800050c:	60b9      	str	r1, [r7, #8]
 800050e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000510:	2300      	movs	r3, #0
 8000512:	617b      	str	r3, [r7, #20]
 8000514:	e00a      	b.n	800052c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000516:	f3af 8000 	nop.w
 800051a:	4601      	mov	r1, r0
 800051c:	68bb      	ldr	r3, [r7, #8]
 800051e:	1c5a      	adds	r2, r3, #1
 8000520:	60ba      	str	r2, [r7, #8]
 8000522:	b2ca      	uxtb	r2, r1
 8000524:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000526:	697b      	ldr	r3, [r7, #20]
 8000528:	3301      	adds	r3, #1
 800052a:	617b      	str	r3, [r7, #20]
 800052c:	697a      	ldr	r2, [r7, #20]
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	429a      	cmp	r2, r3
 8000532:	dbf0      	blt.n	8000516 <_read+0x12>
  }

  return len;
 8000534:	687b      	ldr	r3, [r7, #4]
}
 8000536:	4618      	mov	r0, r3
 8000538:	3718      	adds	r7, #24
 800053a:	46bd      	mov	sp, r7
 800053c:	bd80      	pop	{r7, pc}

0800053e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800053e:	b580      	push	{r7, lr}
 8000540:	b086      	sub	sp, #24
 8000542:	af00      	add	r7, sp, #0
 8000544:	60f8      	str	r0, [r7, #12]
 8000546:	60b9      	str	r1, [r7, #8]
 8000548:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800054a:	2300      	movs	r3, #0
 800054c:	617b      	str	r3, [r7, #20]
 800054e:	e009      	b.n	8000564 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000550:	68bb      	ldr	r3, [r7, #8]
 8000552:	1c5a      	adds	r2, r3, #1
 8000554:	60ba      	str	r2, [r7, #8]
 8000556:	781b      	ldrb	r3, [r3, #0]
 8000558:	4618      	mov	r0, r3
 800055a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800055e:	697b      	ldr	r3, [r7, #20]
 8000560:	3301      	adds	r3, #1
 8000562:	617b      	str	r3, [r7, #20]
 8000564:	697a      	ldr	r2, [r7, #20]
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	429a      	cmp	r2, r3
 800056a:	dbf1      	blt.n	8000550 <_write+0x12>
  }
  return len;
 800056c:	687b      	ldr	r3, [r7, #4]
}
 800056e:	4618      	mov	r0, r3
 8000570:	3718      	adds	r7, #24
 8000572:	46bd      	mov	sp, r7
 8000574:	bd80      	pop	{r7, pc}

08000576 <_close>:

int _close(int file)
{
 8000576:	b480      	push	{r7}
 8000578:	b083      	sub	sp, #12
 800057a:	af00      	add	r7, sp, #0
 800057c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800057e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000582:	4618      	mov	r0, r3
 8000584:	370c      	adds	r7, #12
 8000586:	46bd      	mov	sp, r7
 8000588:	bc80      	pop	{r7}
 800058a:	4770      	bx	lr

0800058c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
 8000594:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000596:	683b      	ldr	r3, [r7, #0]
 8000598:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800059c:	605a      	str	r2, [r3, #4]
  return 0;
 800059e:	2300      	movs	r3, #0
}
 80005a0:	4618      	mov	r0, r3
 80005a2:	370c      	adds	r7, #12
 80005a4:	46bd      	mov	sp, r7
 80005a6:	bc80      	pop	{r7}
 80005a8:	4770      	bx	lr

080005aa <_isatty>:

int _isatty(int file)
{
 80005aa:	b480      	push	{r7}
 80005ac:	b083      	sub	sp, #12
 80005ae:	af00      	add	r7, sp, #0
 80005b0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80005b2:	2301      	movs	r3, #1
}
 80005b4:	4618      	mov	r0, r3
 80005b6:	370c      	adds	r7, #12
 80005b8:	46bd      	mov	sp, r7
 80005ba:	bc80      	pop	{r7}
 80005bc:	4770      	bx	lr

080005be <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005be:	b480      	push	{r7}
 80005c0:	b085      	sub	sp, #20
 80005c2:	af00      	add	r7, sp, #0
 80005c4:	60f8      	str	r0, [r7, #12]
 80005c6:	60b9      	str	r1, [r7, #8]
 80005c8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80005ca:	2300      	movs	r3, #0
}
 80005cc:	4618      	mov	r0, r3
 80005ce:	3714      	adds	r7, #20
 80005d0:	46bd      	mov	sp, r7
 80005d2:	bc80      	pop	{r7}
 80005d4:	4770      	bx	lr
	...

080005d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80005d8:	b580      	push	{r7, lr}
 80005da:	b086      	sub	sp, #24
 80005dc:	af00      	add	r7, sp, #0
 80005de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80005e0:	4a14      	ldr	r2, [pc, #80]	@ (8000634 <_sbrk+0x5c>)
 80005e2:	4b15      	ldr	r3, [pc, #84]	@ (8000638 <_sbrk+0x60>)
 80005e4:	1ad3      	subs	r3, r2, r3
 80005e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80005e8:	697b      	ldr	r3, [r7, #20]
 80005ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80005ec:	4b13      	ldr	r3, [pc, #76]	@ (800063c <_sbrk+0x64>)
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	d102      	bne.n	80005fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80005f4:	4b11      	ldr	r3, [pc, #68]	@ (800063c <_sbrk+0x64>)
 80005f6:	4a12      	ldr	r2, [pc, #72]	@ (8000640 <_sbrk+0x68>)
 80005f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80005fa:	4b10      	ldr	r3, [pc, #64]	@ (800063c <_sbrk+0x64>)
 80005fc:	681a      	ldr	r2, [r3, #0]
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	4413      	add	r3, r2
 8000602:	693a      	ldr	r2, [r7, #16]
 8000604:	429a      	cmp	r2, r3
 8000606:	d207      	bcs.n	8000618 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000608:	f000 f9f2 	bl	80009f0 <__errno>
 800060c:	4603      	mov	r3, r0
 800060e:	220c      	movs	r2, #12
 8000610:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000612:	f04f 33ff 	mov.w	r3, #4294967295
 8000616:	e009      	b.n	800062c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000618:	4b08      	ldr	r3, [pc, #32]	@ (800063c <_sbrk+0x64>)
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800061e:	4b07      	ldr	r3, [pc, #28]	@ (800063c <_sbrk+0x64>)
 8000620:	681a      	ldr	r2, [r3, #0]
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	4413      	add	r3, r2
 8000626:	4a05      	ldr	r2, [pc, #20]	@ (800063c <_sbrk+0x64>)
 8000628:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800062a:	68fb      	ldr	r3, [r7, #12]
}
 800062c:	4618      	mov	r0, r3
 800062e:	3718      	adds	r7, #24
 8000630:	46bd      	mov	sp, r7
 8000632:	bd80      	pop	{r7, pc}
 8000634:	20020000 	.word	0x20020000
 8000638:	00000400 	.word	0x00000400
 800063c:	200000c0 	.word	0x200000c0
 8000640:	20000210 	.word	0x20000210

08000644 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000644:	480d      	ldr	r0, [pc, #52]	@ (800067c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000646:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000648:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800064c:	480c      	ldr	r0, [pc, #48]	@ (8000680 <LoopForever+0x6>)
  ldr r1, =_edata
 800064e:	490d      	ldr	r1, [pc, #52]	@ (8000684 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000650:	4a0d      	ldr	r2, [pc, #52]	@ (8000688 <LoopForever+0xe>)
  movs r3, #0
 8000652:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000654:	e002      	b.n	800065c <LoopCopyDataInit>

08000656 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000656:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000658:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800065a:	3304      	adds	r3, #4

0800065c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800065c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800065e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000660:	d3f9      	bcc.n	8000656 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000662:	4a0a      	ldr	r2, [pc, #40]	@ (800068c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000664:	4c0a      	ldr	r4, [pc, #40]	@ (8000690 <LoopForever+0x16>)
  movs r3, #0
 8000666:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000668:	e001      	b.n	800066e <LoopFillZerobss>

0800066a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800066a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800066c:	3204      	adds	r2, #4

0800066e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800066e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000670:	d3fb      	bcc.n	800066a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000672:	f000 f9c3 	bl	80009fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000676:	f7ff feeb 	bl	8000450 <main>

0800067a <LoopForever>:

LoopForever:
  b LoopForever
 800067a:	e7fe      	b.n	800067a <LoopForever>
  ldr   r0, =_estack
 800067c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000680:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000684:	200000a4 	.word	0x200000a4
  ldr r2, =_sidata
 8000688:	0800184c 	.word	0x0800184c
  ldr r2, =_sbss
 800068c:	200000a4 	.word	0x200000a4
  ldr r4, =_ebss
 8000690:	20000210 	.word	0x20000210

08000694 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000694:	e7fe      	b.n	8000694 <ADC_IRQHandler>
	...

08000698 <rand>:
 8000698:	4b16      	ldr	r3, [pc, #88]	@ (80006f4 <rand+0x5c>)
 800069a:	b510      	push	{r4, lr}
 800069c:	681c      	ldr	r4, [r3, #0]
 800069e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80006a0:	b9b3      	cbnz	r3, 80006d0 <rand+0x38>
 80006a2:	2018      	movs	r0, #24
 80006a4:	f000 fa3a 	bl	8000b1c <malloc>
 80006a8:	4602      	mov	r2, r0
 80006aa:	6320      	str	r0, [r4, #48]	@ 0x30
 80006ac:	b920      	cbnz	r0, 80006b8 <rand+0x20>
 80006ae:	4b12      	ldr	r3, [pc, #72]	@ (80006f8 <rand+0x60>)
 80006b0:	4812      	ldr	r0, [pc, #72]	@ (80006fc <rand+0x64>)
 80006b2:	2152      	movs	r1, #82	@ 0x52
 80006b4:	f000 f9ca 	bl	8000a4c <__assert_func>
 80006b8:	4911      	ldr	r1, [pc, #68]	@ (8000700 <rand+0x68>)
 80006ba:	4b12      	ldr	r3, [pc, #72]	@ (8000704 <rand+0x6c>)
 80006bc:	e9c0 1300 	strd	r1, r3, [r0]
 80006c0:	4b11      	ldr	r3, [pc, #68]	@ (8000708 <rand+0x70>)
 80006c2:	6083      	str	r3, [r0, #8]
 80006c4:	230b      	movs	r3, #11
 80006c6:	8183      	strh	r3, [r0, #12]
 80006c8:	2100      	movs	r1, #0
 80006ca:	2001      	movs	r0, #1
 80006cc:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80006d0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80006d2:	480e      	ldr	r0, [pc, #56]	@ (800070c <rand+0x74>)
 80006d4:	690b      	ldr	r3, [r1, #16]
 80006d6:	694c      	ldr	r4, [r1, #20]
 80006d8:	4a0d      	ldr	r2, [pc, #52]	@ (8000710 <rand+0x78>)
 80006da:	4358      	muls	r0, r3
 80006dc:	fb02 0004 	mla	r0, r2, r4, r0
 80006e0:	fba3 3202 	umull	r3, r2, r3, r2
 80006e4:	3301      	adds	r3, #1
 80006e6:	eb40 0002 	adc.w	r0, r0, r2
 80006ea:	e9c1 3004 	strd	r3, r0, [r1, #16]
 80006ee:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 80006f2:	bd10      	pop	{r4, pc}
 80006f4:	20000054 	.word	0x20000054
 80006f8:	0800175b 	.word	0x0800175b
 80006fc:	08001772 	.word	0x08001772
 8000700:	abcd330e 	.word	0xabcd330e
 8000704:	e66d1234 	.word	0xe66d1234
 8000708:	0005deec 	.word	0x0005deec
 800070c:	5851f42d 	.word	0x5851f42d
 8000710:	4c957f2d 	.word	0x4c957f2d

08000714 <std>:
 8000714:	2300      	movs	r3, #0
 8000716:	b510      	push	{r4, lr}
 8000718:	4604      	mov	r4, r0
 800071a:	e9c0 3300 	strd	r3, r3, [r0]
 800071e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000722:	6083      	str	r3, [r0, #8]
 8000724:	8181      	strh	r1, [r0, #12]
 8000726:	6643      	str	r3, [r0, #100]	@ 0x64
 8000728:	81c2      	strh	r2, [r0, #14]
 800072a:	6183      	str	r3, [r0, #24]
 800072c:	4619      	mov	r1, r3
 800072e:	2208      	movs	r2, #8
 8000730:	305c      	adds	r0, #92	@ 0x5c
 8000732:	f000 f90e 	bl	8000952 <memset>
 8000736:	4b0d      	ldr	r3, [pc, #52]	@ (800076c <std+0x58>)
 8000738:	6263      	str	r3, [r4, #36]	@ 0x24
 800073a:	4b0d      	ldr	r3, [pc, #52]	@ (8000770 <std+0x5c>)
 800073c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800073e:	4b0d      	ldr	r3, [pc, #52]	@ (8000774 <std+0x60>)
 8000740:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000742:	4b0d      	ldr	r3, [pc, #52]	@ (8000778 <std+0x64>)
 8000744:	6323      	str	r3, [r4, #48]	@ 0x30
 8000746:	4b0d      	ldr	r3, [pc, #52]	@ (800077c <std+0x68>)
 8000748:	6224      	str	r4, [r4, #32]
 800074a:	429c      	cmp	r4, r3
 800074c:	d006      	beq.n	800075c <std+0x48>
 800074e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000752:	4294      	cmp	r4, r2
 8000754:	d002      	beq.n	800075c <std+0x48>
 8000756:	33d0      	adds	r3, #208	@ 0xd0
 8000758:	429c      	cmp	r4, r3
 800075a:	d105      	bne.n	8000768 <std+0x54>
 800075c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000760:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000764:	f000 b96e 	b.w	8000a44 <__retarget_lock_init_recursive>
 8000768:	bd10      	pop	{r4, pc}
 800076a:	bf00      	nop
 800076c:	080008cd 	.word	0x080008cd
 8000770:	080008ef 	.word	0x080008ef
 8000774:	08000927 	.word	0x08000927
 8000778:	0800094b 	.word	0x0800094b
 800077c:	200000c4 	.word	0x200000c4

08000780 <stdio_exit_handler>:
 8000780:	4a02      	ldr	r2, [pc, #8]	@ (800078c <stdio_exit_handler+0xc>)
 8000782:	4903      	ldr	r1, [pc, #12]	@ (8000790 <stdio_exit_handler+0x10>)
 8000784:	4803      	ldr	r0, [pc, #12]	@ (8000794 <stdio_exit_handler+0x14>)
 8000786:	f000 b869 	b.w	800085c <_fwalk_sglue>
 800078a:	bf00      	nop
 800078c:	20000048 	.word	0x20000048
 8000790:	08001325 	.word	0x08001325
 8000794:	20000058 	.word	0x20000058

08000798 <cleanup_stdio>:
 8000798:	6841      	ldr	r1, [r0, #4]
 800079a:	4b0c      	ldr	r3, [pc, #48]	@ (80007cc <cleanup_stdio+0x34>)
 800079c:	4299      	cmp	r1, r3
 800079e:	b510      	push	{r4, lr}
 80007a0:	4604      	mov	r4, r0
 80007a2:	d001      	beq.n	80007a8 <cleanup_stdio+0x10>
 80007a4:	f000 fdbe 	bl	8001324 <_fflush_r>
 80007a8:	68a1      	ldr	r1, [r4, #8]
 80007aa:	4b09      	ldr	r3, [pc, #36]	@ (80007d0 <cleanup_stdio+0x38>)
 80007ac:	4299      	cmp	r1, r3
 80007ae:	d002      	beq.n	80007b6 <cleanup_stdio+0x1e>
 80007b0:	4620      	mov	r0, r4
 80007b2:	f000 fdb7 	bl	8001324 <_fflush_r>
 80007b6:	68e1      	ldr	r1, [r4, #12]
 80007b8:	4b06      	ldr	r3, [pc, #24]	@ (80007d4 <cleanup_stdio+0x3c>)
 80007ba:	4299      	cmp	r1, r3
 80007bc:	d004      	beq.n	80007c8 <cleanup_stdio+0x30>
 80007be:	4620      	mov	r0, r4
 80007c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007c4:	f000 bdae 	b.w	8001324 <_fflush_r>
 80007c8:	bd10      	pop	{r4, pc}
 80007ca:	bf00      	nop
 80007cc:	200000c4 	.word	0x200000c4
 80007d0:	2000012c 	.word	0x2000012c
 80007d4:	20000194 	.word	0x20000194

080007d8 <global_stdio_init.part.0>:
 80007d8:	b510      	push	{r4, lr}
 80007da:	4b0b      	ldr	r3, [pc, #44]	@ (8000808 <global_stdio_init.part.0+0x30>)
 80007dc:	4c0b      	ldr	r4, [pc, #44]	@ (800080c <global_stdio_init.part.0+0x34>)
 80007de:	4a0c      	ldr	r2, [pc, #48]	@ (8000810 <global_stdio_init.part.0+0x38>)
 80007e0:	601a      	str	r2, [r3, #0]
 80007e2:	4620      	mov	r0, r4
 80007e4:	2200      	movs	r2, #0
 80007e6:	2104      	movs	r1, #4
 80007e8:	f7ff ff94 	bl	8000714 <std>
 80007ec:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80007f0:	2201      	movs	r2, #1
 80007f2:	2109      	movs	r1, #9
 80007f4:	f7ff ff8e 	bl	8000714 <std>
 80007f8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80007fc:	2202      	movs	r2, #2
 80007fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000802:	2112      	movs	r1, #18
 8000804:	f7ff bf86 	b.w	8000714 <std>
 8000808:	200001fc 	.word	0x200001fc
 800080c:	200000c4 	.word	0x200000c4
 8000810:	08000781 	.word	0x08000781

08000814 <__sfp_lock_acquire>:
 8000814:	4801      	ldr	r0, [pc, #4]	@ (800081c <__sfp_lock_acquire+0x8>)
 8000816:	f000 b916 	b.w	8000a46 <__retarget_lock_acquire_recursive>
 800081a:	bf00      	nop
 800081c:	20000205 	.word	0x20000205

08000820 <__sfp_lock_release>:
 8000820:	4801      	ldr	r0, [pc, #4]	@ (8000828 <__sfp_lock_release+0x8>)
 8000822:	f000 b911 	b.w	8000a48 <__retarget_lock_release_recursive>
 8000826:	bf00      	nop
 8000828:	20000205 	.word	0x20000205

0800082c <__sinit>:
 800082c:	b510      	push	{r4, lr}
 800082e:	4604      	mov	r4, r0
 8000830:	f7ff fff0 	bl	8000814 <__sfp_lock_acquire>
 8000834:	6a23      	ldr	r3, [r4, #32]
 8000836:	b11b      	cbz	r3, 8000840 <__sinit+0x14>
 8000838:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800083c:	f7ff bff0 	b.w	8000820 <__sfp_lock_release>
 8000840:	4b04      	ldr	r3, [pc, #16]	@ (8000854 <__sinit+0x28>)
 8000842:	6223      	str	r3, [r4, #32]
 8000844:	4b04      	ldr	r3, [pc, #16]	@ (8000858 <__sinit+0x2c>)
 8000846:	681b      	ldr	r3, [r3, #0]
 8000848:	2b00      	cmp	r3, #0
 800084a:	d1f5      	bne.n	8000838 <__sinit+0xc>
 800084c:	f7ff ffc4 	bl	80007d8 <global_stdio_init.part.0>
 8000850:	e7f2      	b.n	8000838 <__sinit+0xc>
 8000852:	bf00      	nop
 8000854:	08000799 	.word	0x08000799
 8000858:	200001fc 	.word	0x200001fc

0800085c <_fwalk_sglue>:
 800085c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000860:	4607      	mov	r7, r0
 8000862:	4688      	mov	r8, r1
 8000864:	4614      	mov	r4, r2
 8000866:	2600      	movs	r6, #0
 8000868:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800086c:	f1b9 0901 	subs.w	r9, r9, #1
 8000870:	d505      	bpl.n	800087e <_fwalk_sglue+0x22>
 8000872:	6824      	ldr	r4, [r4, #0]
 8000874:	2c00      	cmp	r4, #0
 8000876:	d1f7      	bne.n	8000868 <_fwalk_sglue+0xc>
 8000878:	4630      	mov	r0, r6
 800087a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800087e:	89ab      	ldrh	r3, [r5, #12]
 8000880:	2b01      	cmp	r3, #1
 8000882:	d907      	bls.n	8000894 <_fwalk_sglue+0x38>
 8000884:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000888:	3301      	adds	r3, #1
 800088a:	d003      	beq.n	8000894 <_fwalk_sglue+0x38>
 800088c:	4629      	mov	r1, r5
 800088e:	4638      	mov	r0, r7
 8000890:	47c0      	blx	r8
 8000892:	4306      	orrs	r6, r0
 8000894:	3568      	adds	r5, #104	@ 0x68
 8000896:	e7e9      	b.n	800086c <_fwalk_sglue+0x10>

08000898 <iprintf>:
 8000898:	b40f      	push	{r0, r1, r2, r3}
 800089a:	b507      	push	{r0, r1, r2, lr}
 800089c:	4906      	ldr	r1, [pc, #24]	@ (80008b8 <iprintf+0x20>)
 800089e:	ab04      	add	r3, sp, #16
 80008a0:	6808      	ldr	r0, [r1, #0]
 80008a2:	f853 2b04 	ldr.w	r2, [r3], #4
 80008a6:	6881      	ldr	r1, [r0, #8]
 80008a8:	9301      	str	r3, [sp, #4]
 80008aa:	f000 fa15 	bl	8000cd8 <_vfiprintf_r>
 80008ae:	b003      	add	sp, #12
 80008b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80008b4:	b004      	add	sp, #16
 80008b6:	4770      	bx	lr
 80008b8:	20000054 	.word	0x20000054

080008bc <putchar>:
 80008bc:	4b02      	ldr	r3, [pc, #8]	@ (80008c8 <putchar+0xc>)
 80008be:	4601      	mov	r1, r0
 80008c0:	6818      	ldr	r0, [r3, #0]
 80008c2:	6882      	ldr	r2, [r0, #8]
 80008c4:	f000 bd68 	b.w	8001398 <_putc_r>
 80008c8:	20000054 	.word	0x20000054

080008cc <__sread>:
 80008cc:	b510      	push	{r4, lr}
 80008ce:	460c      	mov	r4, r1
 80008d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008d4:	f000 f868 	bl	80009a8 <_read_r>
 80008d8:	2800      	cmp	r0, #0
 80008da:	bfab      	itete	ge
 80008dc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80008de:	89a3      	ldrhlt	r3, [r4, #12]
 80008e0:	181b      	addge	r3, r3, r0
 80008e2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80008e6:	bfac      	ite	ge
 80008e8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80008ea:	81a3      	strhlt	r3, [r4, #12]
 80008ec:	bd10      	pop	{r4, pc}

080008ee <__swrite>:
 80008ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008f2:	461f      	mov	r7, r3
 80008f4:	898b      	ldrh	r3, [r1, #12]
 80008f6:	05db      	lsls	r3, r3, #23
 80008f8:	4605      	mov	r5, r0
 80008fa:	460c      	mov	r4, r1
 80008fc:	4616      	mov	r6, r2
 80008fe:	d505      	bpl.n	800090c <__swrite+0x1e>
 8000900:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000904:	2302      	movs	r3, #2
 8000906:	2200      	movs	r2, #0
 8000908:	f000 f83c 	bl	8000984 <_lseek_r>
 800090c:	89a3      	ldrh	r3, [r4, #12]
 800090e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000912:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000916:	81a3      	strh	r3, [r4, #12]
 8000918:	4632      	mov	r2, r6
 800091a:	463b      	mov	r3, r7
 800091c:	4628      	mov	r0, r5
 800091e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000922:	f000 b853 	b.w	80009cc <_write_r>

08000926 <__sseek>:
 8000926:	b510      	push	{r4, lr}
 8000928:	460c      	mov	r4, r1
 800092a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800092e:	f000 f829 	bl	8000984 <_lseek_r>
 8000932:	1c43      	adds	r3, r0, #1
 8000934:	89a3      	ldrh	r3, [r4, #12]
 8000936:	bf15      	itete	ne
 8000938:	6560      	strne	r0, [r4, #84]	@ 0x54
 800093a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800093e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000942:	81a3      	strheq	r3, [r4, #12]
 8000944:	bf18      	it	ne
 8000946:	81a3      	strhne	r3, [r4, #12]
 8000948:	bd10      	pop	{r4, pc}

0800094a <__sclose>:
 800094a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800094e:	f000 b809 	b.w	8000964 <_close_r>

08000952 <memset>:
 8000952:	4402      	add	r2, r0
 8000954:	4603      	mov	r3, r0
 8000956:	4293      	cmp	r3, r2
 8000958:	d100      	bne.n	800095c <memset+0xa>
 800095a:	4770      	bx	lr
 800095c:	f803 1b01 	strb.w	r1, [r3], #1
 8000960:	e7f9      	b.n	8000956 <memset+0x4>
	...

08000964 <_close_r>:
 8000964:	b538      	push	{r3, r4, r5, lr}
 8000966:	4d06      	ldr	r5, [pc, #24]	@ (8000980 <_close_r+0x1c>)
 8000968:	2300      	movs	r3, #0
 800096a:	4604      	mov	r4, r0
 800096c:	4608      	mov	r0, r1
 800096e:	602b      	str	r3, [r5, #0]
 8000970:	f7ff fe01 	bl	8000576 <_close>
 8000974:	1c43      	adds	r3, r0, #1
 8000976:	d102      	bne.n	800097e <_close_r+0x1a>
 8000978:	682b      	ldr	r3, [r5, #0]
 800097a:	b103      	cbz	r3, 800097e <_close_r+0x1a>
 800097c:	6023      	str	r3, [r4, #0]
 800097e:	bd38      	pop	{r3, r4, r5, pc}
 8000980:	20000200 	.word	0x20000200

08000984 <_lseek_r>:
 8000984:	b538      	push	{r3, r4, r5, lr}
 8000986:	4d07      	ldr	r5, [pc, #28]	@ (80009a4 <_lseek_r+0x20>)
 8000988:	4604      	mov	r4, r0
 800098a:	4608      	mov	r0, r1
 800098c:	4611      	mov	r1, r2
 800098e:	2200      	movs	r2, #0
 8000990:	602a      	str	r2, [r5, #0]
 8000992:	461a      	mov	r2, r3
 8000994:	f7ff fe13 	bl	80005be <_lseek>
 8000998:	1c43      	adds	r3, r0, #1
 800099a:	d102      	bne.n	80009a2 <_lseek_r+0x1e>
 800099c:	682b      	ldr	r3, [r5, #0]
 800099e:	b103      	cbz	r3, 80009a2 <_lseek_r+0x1e>
 80009a0:	6023      	str	r3, [r4, #0]
 80009a2:	bd38      	pop	{r3, r4, r5, pc}
 80009a4:	20000200 	.word	0x20000200

080009a8 <_read_r>:
 80009a8:	b538      	push	{r3, r4, r5, lr}
 80009aa:	4d07      	ldr	r5, [pc, #28]	@ (80009c8 <_read_r+0x20>)
 80009ac:	4604      	mov	r4, r0
 80009ae:	4608      	mov	r0, r1
 80009b0:	4611      	mov	r1, r2
 80009b2:	2200      	movs	r2, #0
 80009b4:	602a      	str	r2, [r5, #0]
 80009b6:	461a      	mov	r2, r3
 80009b8:	f7ff fda4 	bl	8000504 <_read>
 80009bc:	1c43      	adds	r3, r0, #1
 80009be:	d102      	bne.n	80009c6 <_read_r+0x1e>
 80009c0:	682b      	ldr	r3, [r5, #0]
 80009c2:	b103      	cbz	r3, 80009c6 <_read_r+0x1e>
 80009c4:	6023      	str	r3, [r4, #0]
 80009c6:	bd38      	pop	{r3, r4, r5, pc}
 80009c8:	20000200 	.word	0x20000200

080009cc <_write_r>:
 80009cc:	b538      	push	{r3, r4, r5, lr}
 80009ce:	4d07      	ldr	r5, [pc, #28]	@ (80009ec <_write_r+0x20>)
 80009d0:	4604      	mov	r4, r0
 80009d2:	4608      	mov	r0, r1
 80009d4:	4611      	mov	r1, r2
 80009d6:	2200      	movs	r2, #0
 80009d8:	602a      	str	r2, [r5, #0]
 80009da:	461a      	mov	r2, r3
 80009dc:	f7ff fdaf 	bl	800053e <_write>
 80009e0:	1c43      	adds	r3, r0, #1
 80009e2:	d102      	bne.n	80009ea <_write_r+0x1e>
 80009e4:	682b      	ldr	r3, [r5, #0]
 80009e6:	b103      	cbz	r3, 80009ea <_write_r+0x1e>
 80009e8:	6023      	str	r3, [r4, #0]
 80009ea:	bd38      	pop	{r3, r4, r5, pc}
 80009ec:	20000200 	.word	0x20000200

080009f0 <__errno>:
 80009f0:	4b01      	ldr	r3, [pc, #4]	@ (80009f8 <__errno+0x8>)
 80009f2:	6818      	ldr	r0, [r3, #0]
 80009f4:	4770      	bx	lr
 80009f6:	bf00      	nop
 80009f8:	20000054 	.word	0x20000054

080009fc <__libc_init_array>:
 80009fc:	b570      	push	{r4, r5, r6, lr}
 80009fe:	4d0d      	ldr	r5, [pc, #52]	@ (8000a34 <__libc_init_array+0x38>)
 8000a00:	4c0d      	ldr	r4, [pc, #52]	@ (8000a38 <__libc_init_array+0x3c>)
 8000a02:	1b64      	subs	r4, r4, r5
 8000a04:	10a4      	asrs	r4, r4, #2
 8000a06:	2600      	movs	r6, #0
 8000a08:	42a6      	cmp	r6, r4
 8000a0a:	d109      	bne.n	8000a20 <__libc_init_array+0x24>
 8000a0c:	4d0b      	ldr	r5, [pc, #44]	@ (8000a3c <__libc_init_array+0x40>)
 8000a0e:	4c0c      	ldr	r4, [pc, #48]	@ (8000a40 <__libc_init_array+0x44>)
 8000a10:	f000 fe6a 	bl	80016e8 <_init>
 8000a14:	1b64      	subs	r4, r4, r5
 8000a16:	10a4      	asrs	r4, r4, #2
 8000a18:	2600      	movs	r6, #0
 8000a1a:	42a6      	cmp	r6, r4
 8000a1c:	d105      	bne.n	8000a2a <__libc_init_array+0x2e>
 8000a1e:	bd70      	pop	{r4, r5, r6, pc}
 8000a20:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a24:	4798      	blx	r3
 8000a26:	3601      	adds	r6, #1
 8000a28:	e7ee      	b.n	8000a08 <__libc_init_array+0xc>
 8000a2a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a2e:	4798      	blx	r3
 8000a30:	3601      	adds	r6, #1
 8000a32:	e7f2      	b.n	8000a1a <__libc_init_array+0x1e>
 8000a34:	08001844 	.word	0x08001844
 8000a38:	08001844 	.word	0x08001844
 8000a3c:	08001844 	.word	0x08001844
 8000a40:	08001848 	.word	0x08001848

08000a44 <__retarget_lock_init_recursive>:
 8000a44:	4770      	bx	lr

08000a46 <__retarget_lock_acquire_recursive>:
 8000a46:	4770      	bx	lr

08000a48 <__retarget_lock_release_recursive>:
 8000a48:	4770      	bx	lr
	...

08000a4c <__assert_func>:
 8000a4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000a4e:	4614      	mov	r4, r2
 8000a50:	461a      	mov	r2, r3
 8000a52:	4b09      	ldr	r3, [pc, #36]	@ (8000a78 <__assert_func+0x2c>)
 8000a54:	681b      	ldr	r3, [r3, #0]
 8000a56:	4605      	mov	r5, r0
 8000a58:	68d8      	ldr	r0, [r3, #12]
 8000a5a:	b954      	cbnz	r4, 8000a72 <__assert_func+0x26>
 8000a5c:	4b07      	ldr	r3, [pc, #28]	@ (8000a7c <__assert_func+0x30>)
 8000a5e:	461c      	mov	r4, r3
 8000a60:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000a64:	9100      	str	r1, [sp, #0]
 8000a66:	462b      	mov	r3, r5
 8000a68:	4905      	ldr	r1, [pc, #20]	@ (8000a80 <__assert_func+0x34>)
 8000a6a:	f000 fc83 	bl	8001374 <fiprintf>
 8000a6e:	f000 fd6b 	bl	8001548 <abort>
 8000a72:	4b04      	ldr	r3, [pc, #16]	@ (8000a84 <__assert_func+0x38>)
 8000a74:	e7f4      	b.n	8000a60 <__assert_func+0x14>
 8000a76:	bf00      	nop
 8000a78:	20000054 	.word	0x20000054
 8000a7c:	08001805 	.word	0x08001805
 8000a80:	080017d7 	.word	0x080017d7
 8000a84:	080017ca 	.word	0x080017ca

08000a88 <_free_r>:
 8000a88:	b538      	push	{r3, r4, r5, lr}
 8000a8a:	4605      	mov	r5, r0
 8000a8c:	2900      	cmp	r1, #0
 8000a8e:	d041      	beq.n	8000b14 <_free_r+0x8c>
 8000a90:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a94:	1f0c      	subs	r4, r1, #4
 8000a96:	2b00      	cmp	r3, #0
 8000a98:	bfb8      	it	lt
 8000a9a:	18e4      	addlt	r4, r4, r3
 8000a9c:	f000 f8e8 	bl	8000c70 <__malloc_lock>
 8000aa0:	4a1d      	ldr	r2, [pc, #116]	@ (8000b18 <_free_r+0x90>)
 8000aa2:	6813      	ldr	r3, [r2, #0]
 8000aa4:	b933      	cbnz	r3, 8000ab4 <_free_r+0x2c>
 8000aa6:	6063      	str	r3, [r4, #4]
 8000aa8:	6014      	str	r4, [r2, #0]
 8000aaa:	4628      	mov	r0, r5
 8000aac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ab0:	f000 b8e4 	b.w	8000c7c <__malloc_unlock>
 8000ab4:	42a3      	cmp	r3, r4
 8000ab6:	d908      	bls.n	8000aca <_free_r+0x42>
 8000ab8:	6820      	ldr	r0, [r4, #0]
 8000aba:	1821      	adds	r1, r4, r0
 8000abc:	428b      	cmp	r3, r1
 8000abe:	bf01      	itttt	eq
 8000ac0:	6819      	ldreq	r1, [r3, #0]
 8000ac2:	685b      	ldreq	r3, [r3, #4]
 8000ac4:	1809      	addeq	r1, r1, r0
 8000ac6:	6021      	streq	r1, [r4, #0]
 8000ac8:	e7ed      	b.n	8000aa6 <_free_r+0x1e>
 8000aca:	461a      	mov	r2, r3
 8000acc:	685b      	ldr	r3, [r3, #4]
 8000ace:	b10b      	cbz	r3, 8000ad4 <_free_r+0x4c>
 8000ad0:	42a3      	cmp	r3, r4
 8000ad2:	d9fa      	bls.n	8000aca <_free_r+0x42>
 8000ad4:	6811      	ldr	r1, [r2, #0]
 8000ad6:	1850      	adds	r0, r2, r1
 8000ad8:	42a0      	cmp	r0, r4
 8000ada:	d10b      	bne.n	8000af4 <_free_r+0x6c>
 8000adc:	6820      	ldr	r0, [r4, #0]
 8000ade:	4401      	add	r1, r0
 8000ae0:	1850      	adds	r0, r2, r1
 8000ae2:	4283      	cmp	r3, r0
 8000ae4:	6011      	str	r1, [r2, #0]
 8000ae6:	d1e0      	bne.n	8000aaa <_free_r+0x22>
 8000ae8:	6818      	ldr	r0, [r3, #0]
 8000aea:	685b      	ldr	r3, [r3, #4]
 8000aec:	6053      	str	r3, [r2, #4]
 8000aee:	4408      	add	r0, r1
 8000af0:	6010      	str	r0, [r2, #0]
 8000af2:	e7da      	b.n	8000aaa <_free_r+0x22>
 8000af4:	d902      	bls.n	8000afc <_free_r+0x74>
 8000af6:	230c      	movs	r3, #12
 8000af8:	602b      	str	r3, [r5, #0]
 8000afa:	e7d6      	b.n	8000aaa <_free_r+0x22>
 8000afc:	6820      	ldr	r0, [r4, #0]
 8000afe:	1821      	adds	r1, r4, r0
 8000b00:	428b      	cmp	r3, r1
 8000b02:	bf04      	itt	eq
 8000b04:	6819      	ldreq	r1, [r3, #0]
 8000b06:	685b      	ldreq	r3, [r3, #4]
 8000b08:	6063      	str	r3, [r4, #4]
 8000b0a:	bf04      	itt	eq
 8000b0c:	1809      	addeq	r1, r1, r0
 8000b0e:	6021      	streq	r1, [r4, #0]
 8000b10:	6054      	str	r4, [r2, #4]
 8000b12:	e7ca      	b.n	8000aaa <_free_r+0x22>
 8000b14:	bd38      	pop	{r3, r4, r5, pc}
 8000b16:	bf00      	nop
 8000b18:	2000020c 	.word	0x2000020c

08000b1c <malloc>:
 8000b1c:	4b02      	ldr	r3, [pc, #8]	@ (8000b28 <malloc+0xc>)
 8000b1e:	4601      	mov	r1, r0
 8000b20:	6818      	ldr	r0, [r3, #0]
 8000b22:	f000 b825 	b.w	8000b70 <_malloc_r>
 8000b26:	bf00      	nop
 8000b28:	20000054 	.word	0x20000054

08000b2c <sbrk_aligned>:
 8000b2c:	b570      	push	{r4, r5, r6, lr}
 8000b2e:	4e0f      	ldr	r6, [pc, #60]	@ (8000b6c <sbrk_aligned+0x40>)
 8000b30:	460c      	mov	r4, r1
 8000b32:	6831      	ldr	r1, [r6, #0]
 8000b34:	4605      	mov	r5, r0
 8000b36:	b911      	cbnz	r1, 8000b3e <sbrk_aligned+0x12>
 8000b38:	f000 fcf6 	bl	8001528 <_sbrk_r>
 8000b3c:	6030      	str	r0, [r6, #0]
 8000b3e:	4621      	mov	r1, r4
 8000b40:	4628      	mov	r0, r5
 8000b42:	f000 fcf1 	bl	8001528 <_sbrk_r>
 8000b46:	1c43      	adds	r3, r0, #1
 8000b48:	d103      	bne.n	8000b52 <sbrk_aligned+0x26>
 8000b4a:	f04f 34ff 	mov.w	r4, #4294967295
 8000b4e:	4620      	mov	r0, r4
 8000b50:	bd70      	pop	{r4, r5, r6, pc}
 8000b52:	1cc4      	adds	r4, r0, #3
 8000b54:	f024 0403 	bic.w	r4, r4, #3
 8000b58:	42a0      	cmp	r0, r4
 8000b5a:	d0f8      	beq.n	8000b4e <sbrk_aligned+0x22>
 8000b5c:	1a21      	subs	r1, r4, r0
 8000b5e:	4628      	mov	r0, r5
 8000b60:	f000 fce2 	bl	8001528 <_sbrk_r>
 8000b64:	3001      	adds	r0, #1
 8000b66:	d1f2      	bne.n	8000b4e <sbrk_aligned+0x22>
 8000b68:	e7ef      	b.n	8000b4a <sbrk_aligned+0x1e>
 8000b6a:	bf00      	nop
 8000b6c:	20000208 	.word	0x20000208

08000b70 <_malloc_r>:
 8000b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b74:	1ccd      	adds	r5, r1, #3
 8000b76:	f025 0503 	bic.w	r5, r5, #3
 8000b7a:	3508      	adds	r5, #8
 8000b7c:	2d0c      	cmp	r5, #12
 8000b7e:	bf38      	it	cc
 8000b80:	250c      	movcc	r5, #12
 8000b82:	2d00      	cmp	r5, #0
 8000b84:	4606      	mov	r6, r0
 8000b86:	db01      	blt.n	8000b8c <_malloc_r+0x1c>
 8000b88:	42a9      	cmp	r1, r5
 8000b8a:	d904      	bls.n	8000b96 <_malloc_r+0x26>
 8000b8c:	230c      	movs	r3, #12
 8000b8e:	6033      	str	r3, [r6, #0]
 8000b90:	2000      	movs	r0, #0
 8000b92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b96:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c6c <_malloc_r+0xfc>
 8000b9a:	f000 f869 	bl	8000c70 <__malloc_lock>
 8000b9e:	f8d8 3000 	ldr.w	r3, [r8]
 8000ba2:	461c      	mov	r4, r3
 8000ba4:	bb44      	cbnz	r4, 8000bf8 <_malloc_r+0x88>
 8000ba6:	4629      	mov	r1, r5
 8000ba8:	4630      	mov	r0, r6
 8000baa:	f7ff ffbf 	bl	8000b2c <sbrk_aligned>
 8000bae:	1c43      	adds	r3, r0, #1
 8000bb0:	4604      	mov	r4, r0
 8000bb2:	d158      	bne.n	8000c66 <_malloc_r+0xf6>
 8000bb4:	f8d8 4000 	ldr.w	r4, [r8]
 8000bb8:	4627      	mov	r7, r4
 8000bba:	2f00      	cmp	r7, #0
 8000bbc:	d143      	bne.n	8000c46 <_malloc_r+0xd6>
 8000bbe:	2c00      	cmp	r4, #0
 8000bc0:	d04b      	beq.n	8000c5a <_malloc_r+0xea>
 8000bc2:	6823      	ldr	r3, [r4, #0]
 8000bc4:	4639      	mov	r1, r7
 8000bc6:	4630      	mov	r0, r6
 8000bc8:	eb04 0903 	add.w	r9, r4, r3
 8000bcc:	f000 fcac 	bl	8001528 <_sbrk_r>
 8000bd0:	4581      	cmp	r9, r0
 8000bd2:	d142      	bne.n	8000c5a <_malloc_r+0xea>
 8000bd4:	6821      	ldr	r1, [r4, #0]
 8000bd6:	1a6d      	subs	r5, r5, r1
 8000bd8:	4629      	mov	r1, r5
 8000bda:	4630      	mov	r0, r6
 8000bdc:	f7ff ffa6 	bl	8000b2c <sbrk_aligned>
 8000be0:	3001      	adds	r0, #1
 8000be2:	d03a      	beq.n	8000c5a <_malloc_r+0xea>
 8000be4:	6823      	ldr	r3, [r4, #0]
 8000be6:	442b      	add	r3, r5
 8000be8:	6023      	str	r3, [r4, #0]
 8000bea:	f8d8 3000 	ldr.w	r3, [r8]
 8000bee:	685a      	ldr	r2, [r3, #4]
 8000bf0:	bb62      	cbnz	r2, 8000c4c <_malloc_r+0xdc>
 8000bf2:	f8c8 7000 	str.w	r7, [r8]
 8000bf6:	e00f      	b.n	8000c18 <_malloc_r+0xa8>
 8000bf8:	6822      	ldr	r2, [r4, #0]
 8000bfa:	1b52      	subs	r2, r2, r5
 8000bfc:	d420      	bmi.n	8000c40 <_malloc_r+0xd0>
 8000bfe:	2a0b      	cmp	r2, #11
 8000c00:	d917      	bls.n	8000c32 <_malloc_r+0xc2>
 8000c02:	1961      	adds	r1, r4, r5
 8000c04:	42a3      	cmp	r3, r4
 8000c06:	6025      	str	r5, [r4, #0]
 8000c08:	bf18      	it	ne
 8000c0a:	6059      	strne	r1, [r3, #4]
 8000c0c:	6863      	ldr	r3, [r4, #4]
 8000c0e:	bf08      	it	eq
 8000c10:	f8c8 1000 	streq.w	r1, [r8]
 8000c14:	5162      	str	r2, [r4, r5]
 8000c16:	604b      	str	r3, [r1, #4]
 8000c18:	4630      	mov	r0, r6
 8000c1a:	f000 f82f 	bl	8000c7c <__malloc_unlock>
 8000c1e:	f104 000b 	add.w	r0, r4, #11
 8000c22:	1d23      	adds	r3, r4, #4
 8000c24:	f020 0007 	bic.w	r0, r0, #7
 8000c28:	1ac2      	subs	r2, r0, r3
 8000c2a:	bf1c      	itt	ne
 8000c2c:	1a1b      	subne	r3, r3, r0
 8000c2e:	50a3      	strne	r3, [r4, r2]
 8000c30:	e7af      	b.n	8000b92 <_malloc_r+0x22>
 8000c32:	6862      	ldr	r2, [r4, #4]
 8000c34:	42a3      	cmp	r3, r4
 8000c36:	bf0c      	ite	eq
 8000c38:	f8c8 2000 	streq.w	r2, [r8]
 8000c3c:	605a      	strne	r2, [r3, #4]
 8000c3e:	e7eb      	b.n	8000c18 <_malloc_r+0xa8>
 8000c40:	4623      	mov	r3, r4
 8000c42:	6864      	ldr	r4, [r4, #4]
 8000c44:	e7ae      	b.n	8000ba4 <_malloc_r+0x34>
 8000c46:	463c      	mov	r4, r7
 8000c48:	687f      	ldr	r7, [r7, #4]
 8000c4a:	e7b6      	b.n	8000bba <_malloc_r+0x4a>
 8000c4c:	461a      	mov	r2, r3
 8000c4e:	685b      	ldr	r3, [r3, #4]
 8000c50:	42a3      	cmp	r3, r4
 8000c52:	d1fb      	bne.n	8000c4c <_malloc_r+0xdc>
 8000c54:	2300      	movs	r3, #0
 8000c56:	6053      	str	r3, [r2, #4]
 8000c58:	e7de      	b.n	8000c18 <_malloc_r+0xa8>
 8000c5a:	230c      	movs	r3, #12
 8000c5c:	6033      	str	r3, [r6, #0]
 8000c5e:	4630      	mov	r0, r6
 8000c60:	f000 f80c 	bl	8000c7c <__malloc_unlock>
 8000c64:	e794      	b.n	8000b90 <_malloc_r+0x20>
 8000c66:	6005      	str	r5, [r0, #0]
 8000c68:	e7d6      	b.n	8000c18 <_malloc_r+0xa8>
 8000c6a:	bf00      	nop
 8000c6c:	2000020c 	.word	0x2000020c

08000c70 <__malloc_lock>:
 8000c70:	4801      	ldr	r0, [pc, #4]	@ (8000c78 <__malloc_lock+0x8>)
 8000c72:	f7ff bee8 	b.w	8000a46 <__retarget_lock_acquire_recursive>
 8000c76:	bf00      	nop
 8000c78:	20000204 	.word	0x20000204

08000c7c <__malloc_unlock>:
 8000c7c:	4801      	ldr	r0, [pc, #4]	@ (8000c84 <__malloc_unlock+0x8>)
 8000c7e:	f7ff bee3 	b.w	8000a48 <__retarget_lock_release_recursive>
 8000c82:	bf00      	nop
 8000c84:	20000204 	.word	0x20000204

08000c88 <__sfputc_r>:
 8000c88:	6893      	ldr	r3, [r2, #8]
 8000c8a:	3b01      	subs	r3, #1
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	b410      	push	{r4}
 8000c90:	6093      	str	r3, [r2, #8]
 8000c92:	da07      	bge.n	8000ca4 <__sfputc_r+0x1c>
 8000c94:	6994      	ldr	r4, [r2, #24]
 8000c96:	42a3      	cmp	r3, r4
 8000c98:	db01      	blt.n	8000c9e <__sfputc_r+0x16>
 8000c9a:	290a      	cmp	r1, #10
 8000c9c:	d102      	bne.n	8000ca4 <__sfputc_r+0x1c>
 8000c9e:	bc10      	pop	{r4}
 8000ca0:	f000 bbae 	b.w	8001400 <__swbuf_r>
 8000ca4:	6813      	ldr	r3, [r2, #0]
 8000ca6:	1c58      	adds	r0, r3, #1
 8000ca8:	6010      	str	r0, [r2, #0]
 8000caa:	7019      	strb	r1, [r3, #0]
 8000cac:	4608      	mov	r0, r1
 8000cae:	bc10      	pop	{r4}
 8000cb0:	4770      	bx	lr

08000cb2 <__sfputs_r>:
 8000cb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb4:	4606      	mov	r6, r0
 8000cb6:	460f      	mov	r7, r1
 8000cb8:	4614      	mov	r4, r2
 8000cba:	18d5      	adds	r5, r2, r3
 8000cbc:	42ac      	cmp	r4, r5
 8000cbe:	d101      	bne.n	8000cc4 <__sfputs_r+0x12>
 8000cc0:	2000      	movs	r0, #0
 8000cc2:	e007      	b.n	8000cd4 <__sfputs_r+0x22>
 8000cc4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cc8:	463a      	mov	r2, r7
 8000cca:	4630      	mov	r0, r6
 8000ccc:	f7ff ffdc 	bl	8000c88 <__sfputc_r>
 8000cd0:	1c43      	adds	r3, r0, #1
 8000cd2:	d1f3      	bne.n	8000cbc <__sfputs_r+0xa>
 8000cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cd8 <_vfiprintf_r>:
 8000cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cdc:	460d      	mov	r5, r1
 8000cde:	b09d      	sub	sp, #116	@ 0x74
 8000ce0:	4614      	mov	r4, r2
 8000ce2:	4698      	mov	r8, r3
 8000ce4:	4606      	mov	r6, r0
 8000ce6:	b118      	cbz	r0, 8000cf0 <_vfiprintf_r+0x18>
 8000ce8:	6a03      	ldr	r3, [r0, #32]
 8000cea:	b90b      	cbnz	r3, 8000cf0 <_vfiprintf_r+0x18>
 8000cec:	f7ff fd9e 	bl	800082c <__sinit>
 8000cf0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cf2:	07d9      	lsls	r1, r3, #31
 8000cf4:	d405      	bmi.n	8000d02 <_vfiprintf_r+0x2a>
 8000cf6:	89ab      	ldrh	r3, [r5, #12]
 8000cf8:	059a      	lsls	r2, r3, #22
 8000cfa:	d402      	bmi.n	8000d02 <_vfiprintf_r+0x2a>
 8000cfc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cfe:	f7ff fea2 	bl	8000a46 <__retarget_lock_acquire_recursive>
 8000d02:	89ab      	ldrh	r3, [r5, #12]
 8000d04:	071b      	lsls	r3, r3, #28
 8000d06:	d501      	bpl.n	8000d0c <_vfiprintf_r+0x34>
 8000d08:	692b      	ldr	r3, [r5, #16]
 8000d0a:	b99b      	cbnz	r3, 8000d34 <_vfiprintf_r+0x5c>
 8000d0c:	4629      	mov	r1, r5
 8000d0e:	4630      	mov	r0, r6
 8000d10:	f000 fbb4 	bl	800147c <__swsetup_r>
 8000d14:	b170      	cbz	r0, 8000d34 <_vfiprintf_r+0x5c>
 8000d16:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d18:	07dc      	lsls	r4, r3, #31
 8000d1a:	d504      	bpl.n	8000d26 <_vfiprintf_r+0x4e>
 8000d1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d20:	b01d      	add	sp, #116	@ 0x74
 8000d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d26:	89ab      	ldrh	r3, [r5, #12]
 8000d28:	0598      	lsls	r0, r3, #22
 8000d2a:	d4f7      	bmi.n	8000d1c <_vfiprintf_r+0x44>
 8000d2c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d2e:	f7ff fe8b 	bl	8000a48 <__retarget_lock_release_recursive>
 8000d32:	e7f3      	b.n	8000d1c <_vfiprintf_r+0x44>
 8000d34:	2300      	movs	r3, #0
 8000d36:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d38:	2320      	movs	r3, #32
 8000d3a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000d3e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d42:	2330      	movs	r3, #48	@ 0x30
 8000d44:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000ef4 <_vfiprintf_r+0x21c>
 8000d48:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000d4c:	f04f 0901 	mov.w	r9, #1
 8000d50:	4623      	mov	r3, r4
 8000d52:	469a      	mov	sl, r3
 8000d54:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d58:	b10a      	cbz	r2, 8000d5e <_vfiprintf_r+0x86>
 8000d5a:	2a25      	cmp	r2, #37	@ 0x25
 8000d5c:	d1f9      	bne.n	8000d52 <_vfiprintf_r+0x7a>
 8000d5e:	ebba 0b04 	subs.w	fp, sl, r4
 8000d62:	d00b      	beq.n	8000d7c <_vfiprintf_r+0xa4>
 8000d64:	465b      	mov	r3, fp
 8000d66:	4622      	mov	r2, r4
 8000d68:	4629      	mov	r1, r5
 8000d6a:	4630      	mov	r0, r6
 8000d6c:	f7ff ffa1 	bl	8000cb2 <__sfputs_r>
 8000d70:	3001      	adds	r0, #1
 8000d72:	f000 80a7 	beq.w	8000ec4 <_vfiprintf_r+0x1ec>
 8000d76:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d78:	445a      	add	r2, fp
 8000d7a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d7c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	f000 809f 	beq.w	8000ec4 <_vfiprintf_r+0x1ec>
 8000d86:	2300      	movs	r3, #0
 8000d88:	f04f 32ff 	mov.w	r2, #4294967295
 8000d8c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d90:	f10a 0a01 	add.w	sl, sl, #1
 8000d94:	9304      	str	r3, [sp, #16]
 8000d96:	9307      	str	r3, [sp, #28]
 8000d98:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d9c:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d9e:	4654      	mov	r4, sl
 8000da0:	2205      	movs	r2, #5
 8000da2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000da6:	4853      	ldr	r0, [pc, #332]	@ (8000ef4 <_vfiprintf_r+0x21c>)
 8000da8:	f7ff fa12 	bl	80001d0 <memchr>
 8000dac:	9a04      	ldr	r2, [sp, #16]
 8000dae:	b9d8      	cbnz	r0, 8000de8 <_vfiprintf_r+0x110>
 8000db0:	06d1      	lsls	r1, r2, #27
 8000db2:	bf44      	itt	mi
 8000db4:	2320      	movmi	r3, #32
 8000db6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000dba:	0713      	lsls	r3, r2, #28
 8000dbc:	bf44      	itt	mi
 8000dbe:	232b      	movmi	r3, #43	@ 0x2b
 8000dc0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000dc4:	f89a 3000 	ldrb.w	r3, [sl]
 8000dc8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dca:	d015      	beq.n	8000df8 <_vfiprintf_r+0x120>
 8000dcc:	9a07      	ldr	r2, [sp, #28]
 8000dce:	4654      	mov	r4, sl
 8000dd0:	2000      	movs	r0, #0
 8000dd2:	f04f 0c0a 	mov.w	ip, #10
 8000dd6:	4621      	mov	r1, r4
 8000dd8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ddc:	3b30      	subs	r3, #48	@ 0x30
 8000dde:	2b09      	cmp	r3, #9
 8000de0:	d94b      	bls.n	8000e7a <_vfiprintf_r+0x1a2>
 8000de2:	b1b0      	cbz	r0, 8000e12 <_vfiprintf_r+0x13a>
 8000de4:	9207      	str	r2, [sp, #28]
 8000de6:	e014      	b.n	8000e12 <_vfiprintf_r+0x13a>
 8000de8:	eba0 0308 	sub.w	r3, r0, r8
 8000dec:	fa09 f303 	lsl.w	r3, r9, r3
 8000df0:	4313      	orrs	r3, r2
 8000df2:	9304      	str	r3, [sp, #16]
 8000df4:	46a2      	mov	sl, r4
 8000df6:	e7d2      	b.n	8000d9e <_vfiprintf_r+0xc6>
 8000df8:	9b03      	ldr	r3, [sp, #12]
 8000dfa:	1d19      	adds	r1, r3, #4
 8000dfc:	681b      	ldr	r3, [r3, #0]
 8000dfe:	9103      	str	r1, [sp, #12]
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	bfbb      	ittet	lt
 8000e04:	425b      	neglt	r3, r3
 8000e06:	f042 0202 	orrlt.w	r2, r2, #2
 8000e0a:	9307      	strge	r3, [sp, #28]
 8000e0c:	9307      	strlt	r3, [sp, #28]
 8000e0e:	bfb8      	it	lt
 8000e10:	9204      	strlt	r2, [sp, #16]
 8000e12:	7823      	ldrb	r3, [r4, #0]
 8000e14:	2b2e      	cmp	r3, #46	@ 0x2e
 8000e16:	d10a      	bne.n	8000e2e <_vfiprintf_r+0x156>
 8000e18:	7863      	ldrb	r3, [r4, #1]
 8000e1a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000e1c:	d132      	bne.n	8000e84 <_vfiprintf_r+0x1ac>
 8000e1e:	9b03      	ldr	r3, [sp, #12]
 8000e20:	1d1a      	adds	r2, r3, #4
 8000e22:	681b      	ldr	r3, [r3, #0]
 8000e24:	9203      	str	r2, [sp, #12]
 8000e26:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000e2a:	3402      	adds	r4, #2
 8000e2c:	9305      	str	r3, [sp, #20]
 8000e2e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000ef8 <_vfiprintf_r+0x220>
 8000e32:	7821      	ldrb	r1, [r4, #0]
 8000e34:	2203      	movs	r2, #3
 8000e36:	4650      	mov	r0, sl
 8000e38:	f7ff f9ca 	bl	80001d0 <memchr>
 8000e3c:	b138      	cbz	r0, 8000e4e <_vfiprintf_r+0x176>
 8000e3e:	9b04      	ldr	r3, [sp, #16]
 8000e40:	eba0 000a 	sub.w	r0, r0, sl
 8000e44:	2240      	movs	r2, #64	@ 0x40
 8000e46:	4082      	lsls	r2, r0
 8000e48:	4313      	orrs	r3, r2
 8000e4a:	3401      	adds	r4, #1
 8000e4c:	9304      	str	r3, [sp, #16]
 8000e4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e52:	482a      	ldr	r0, [pc, #168]	@ (8000efc <_vfiprintf_r+0x224>)
 8000e54:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000e58:	2206      	movs	r2, #6
 8000e5a:	f7ff f9b9 	bl	80001d0 <memchr>
 8000e5e:	2800      	cmp	r0, #0
 8000e60:	d03f      	beq.n	8000ee2 <_vfiprintf_r+0x20a>
 8000e62:	4b27      	ldr	r3, [pc, #156]	@ (8000f00 <_vfiprintf_r+0x228>)
 8000e64:	bb1b      	cbnz	r3, 8000eae <_vfiprintf_r+0x1d6>
 8000e66:	9b03      	ldr	r3, [sp, #12]
 8000e68:	3307      	adds	r3, #7
 8000e6a:	f023 0307 	bic.w	r3, r3, #7
 8000e6e:	3308      	adds	r3, #8
 8000e70:	9303      	str	r3, [sp, #12]
 8000e72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e74:	443b      	add	r3, r7
 8000e76:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e78:	e76a      	b.n	8000d50 <_vfiprintf_r+0x78>
 8000e7a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e7e:	460c      	mov	r4, r1
 8000e80:	2001      	movs	r0, #1
 8000e82:	e7a8      	b.n	8000dd6 <_vfiprintf_r+0xfe>
 8000e84:	2300      	movs	r3, #0
 8000e86:	3401      	adds	r4, #1
 8000e88:	9305      	str	r3, [sp, #20]
 8000e8a:	4619      	mov	r1, r3
 8000e8c:	f04f 0c0a 	mov.w	ip, #10
 8000e90:	4620      	mov	r0, r4
 8000e92:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e96:	3a30      	subs	r2, #48	@ 0x30
 8000e98:	2a09      	cmp	r2, #9
 8000e9a:	d903      	bls.n	8000ea4 <_vfiprintf_r+0x1cc>
 8000e9c:	2b00      	cmp	r3, #0
 8000e9e:	d0c6      	beq.n	8000e2e <_vfiprintf_r+0x156>
 8000ea0:	9105      	str	r1, [sp, #20]
 8000ea2:	e7c4      	b.n	8000e2e <_vfiprintf_r+0x156>
 8000ea4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ea8:	4604      	mov	r4, r0
 8000eaa:	2301      	movs	r3, #1
 8000eac:	e7f0      	b.n	8000e90 <_vfiprintf_r+0x1b8>
 8000eae:	ab03      	add	r3, sp, #12
 8000eb0:	9300      	str	r3, [sp, #0]
 8000eb2:	462a      	mov	r2, r5
 8000eb4:	4b13      	ldr	r3, [pc, #76]	@ (8000f04 <_vfiprintf_r+0x22c>)
 8000eb6:	a904      	add	r1, sp, #16
 8000eb8:	4630      	mov	r0, r6
 8000eba:	f3af 8000 	nop.w
 8000ebe:	4607      	mov	r7, r0
 8000ec0:	1c78      	adds	r0, r7, #1
 8000ec2:	d1d6      	bne.n	8000e72 <_vfiprintf_r+0x19a>
 8000ec4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ec6:	07d9      	lsls	r1, r3, #31
 8000ec8:	d405      	bmi.n	8000ed6 <_vfiprintf_r+0x1fe>
 8000eca:	89ab      	ldrh	r3, [r5, #12]
 8000ecc:	059a      	lsls	r2, r3, #22
 8000ece:	d402      	bmi.n	8000ed6 <_vfiprintf_r+0x1fe>
 8000ed0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ed2:	f7ff fdb9 	bl	8000a48 <__retarget_lock_release_recursive>
 8000ed6:	89ab      	ldrh	r3, [r5, #12]
 8000ed8:	065b      	lsls	r3, r3, #25
 8000eda:	f53f af1f 	bmi.w	8000d1c <_vfiprintf_r+0x44>
 8000ede:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000ee0:	e71e      	b.n	8000d20 <_vfiprintf_r+0x48>
 8000ee2:	ab03      	add	r3, sp, #12
 8000ee4:	9300      	str	r3, [sp, #0]
 8000ee6:	462a      	mov	r2, r5
 8000ee8:	4b06      	ldr	r3, [pc, #24]	@ (8000f04 <_vfiprintf_r+0x22c>)
 8000eea:	a904      	add	r1, sp, #16
 8000eec:	4630      	mov	r0, r6
 8000eee:	f000 f879 	bl	8000fe4 <_printf_i>
 8000ef2:	e7e4      	b.n	8000ebe <_vfiprintf_r+0x1e6>
 8000ef4:	08001806 	.word	0x08001806
 8000ef8:	0800180c 	.word	0x0800180c
 8000efc:	08001810 	.word	0x08001810
 8000f00:	00000000 	.word	0x00000000
 8000f04:	08000cb3 	.word	0x08000cb3

08000f08 <_printf_common>:
 8000f08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f0c:	4616      	mov	r6, r2
 8000f0e:	4698      	mov	r8, r3
 8000f10:	688a      	ldr	r2, [r1, #8]
 8000f12:	690b      	ldr	r3, [r1, #16]
 8000f14:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000f18:	4293      	cmp	r3, r2
 8000f1a:	bfb8      	it	lt
 8000f1c:	4613      	movlt	r3, r2
 8000f1e:	6033      	str	r3, [r6, #0]
 8000f20:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000f24:	4607      	mov	r7, r0
 8000f26:	460c      	mov	r4, r1
 8000f28:	b10a      	cbz	r2, 8000f2e <_printf_common+0x26>
 8000f2a:	3301      	adds	r3, #1
 8000f2c:	6033      	str	r3, [r6, #0]
 8000f2e:	6823      	ldr	r3, [r4, #0]
 8000f30:	0699      	lsls	r1, r3, #26
 8000f32:	bf42      	ittt	mi
 8000f34:	6833      	ldrmi	r3, [r6, #0]
 8000f36:	3302      	addmi	r3, #2
 8000f38:	6033      	strmi	r3, [r6, #0]
 8000f3a:	6825      	ldr	r5, [r4, #0]
 8000f3c:	f015 0506 	ands.w	r5, r5, #6
 8000f40:	d106      	bne.n	8000f50 <_printf_common+0x48>
 8000f42:	f104 0a19 	add.w	sl, r4, #25
 8000f46:	68e3      	ldr	r3, [r4, #12]
 8000f48:	6832      	ldr	r2, [r6, #0]
 8000f4a:	1a9b      	subs	r3, r3, r2
 8000f4c:	42ab      	cmp	r3, r5
 8000f4e:	dc26      	bgt.n	8000f9e <_printf_common+0x96>
 8000f50:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000f54:	6822      	ldr	r2, [r4, #0]
 8000f56:	3b00      	subs	r3, #0
 8000f58:	bf18      	it	ne
 8000f5a:	2301      	movne	r3, #1
 8000f5c:	0692      	lsls	r2, r2, #26
 8000f5e:	d42b      	bmi.n	8000fb8 <_printf_common+0xb0>
 8000f60:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000f64:	4641      	mov	r1, r8
 8000f66:	4638      	mov	r0, r7
 8000f68:	47c8      	blx	r9
 8000f6a:	3001      	adds	r0, #1
 8000f6c:	d01e      	beq.n	8000fac <_printf_common+0xa4>
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	6922      	ldr	r2, [r4, #16]
 8000f72:	f003 0306 	and.w	r3, r3, #6
 8000f76:	2b04      	cmp	r3, #4
 8000f78:	bf02      	ittt	eq
 8000f7a:	68e5      	ldreq	r5, [r4, #12]
 8000f7c:	6833      	ldreq	r3, [r6, #0]
 8000f7e:	1aed      	subeq	r5, r5, r3
 8000f80:	68a3      	ldr	r3, [r4, #8]
 8000f82:	bf0c      	ite	eq
 8000f84:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f88:	2500      	movne	r5, #0
 8000f8a:	4293      	cmp	r3, r2
 8000f8c:	bfc4      	itt	gt
 8000f8e:	1a9b      	subgt	r3, r3, r2
 8000f90:	18ed      	addgt	r5, r5, r3
 8000f92:	2600      	movs	r6, #0
 8000f94:	341a      	adds	r4, #26
 8000f96:	42b5      	cmp	r5, r6
 8000f98:	d11a      	bne.n	8000fd0 <_printf_common+0xc8>
 8000f9a:	2000      	movs	r0, #0
 8000f9c:	e008      	b.n	8000fb0 <_printf_common+0xa8>
 8000f9e:	2301      	movs	r3, #1
 8000fa0:	4652      	mov	r2, sl
 8000fa2:	4641      	mov	r1, r8
 8000fa4:	4638      	mov	r0, r7
 8000fa6:	47c8      	blx	r9
 8000fa8:	3001      	adds	r0, #1
 8000faa:	d103      	bne.n	8000fb4 <_printf_common+0xac>
 8000fac:	f04f 30ff 	mov.w	r0, #4294967295
 8000fb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fb4:	3501      	adds	r5, #1
 8000fb6:	e7c6      	b.n	8000f46 <_printf_common+0x3e>
 8000fb8:	18e1      	adds	r1, r4, r3
 8000fba:	1c5a      	adds	r2, r3, #1
 8000fbc:	2030      	movs	r0, #48	@ 0x30
 8000fbe:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000fc2:	4422      	add	r2, r4
 8000fc4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000fc8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000fcc:	3302      	adds	r3, #2
 8000fce:	e7c7      	b.n	8000f60 <_printf_common+0x58>
 8000fd0:	2301      	movs	r3, #1
 8000fd2:	4622      	mov	r2, r4
 8000fd4:	4641      	mov	r1, r8
 8000fd6:	4638      	mov	r0, r7
 8000fd8:	47c8      	blx	r9
 8000fda:	3001      	adds	r0, #1
 8000fdc:	d0e6      	beq.n	8000fac <_printf_common+0xa4>
 8000fde:	3601      	adds	r6, #1
 8000fe0:	e7d9      	b.n	8000f96 <_printf_common+0x8e>
	...

08000fe4 <_printf_i>:
 8000fe4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fe8:	7e0f      	ldrb	r7, [r1, #24]
 8000fea:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000fec:	2f78      	cmp	r7, #120	@ 0x78
 8000fee:	4691      	mov	r9, r2
 8000ff0:	4680      	mov	r8, r0
 8000ff2:	460c      	mov	r4, r1
 8000ff4:	469a      	mov	sl, r3
 8000ff6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000ffa:	d807      	bhi.n	800100c <_printf_i+0x28>
 8000ffc:	2f62      	cmp	r7, #98	@ 0x62
 8000ffe:	d80a      	bhi.n	8001016 <_printf_i+0x32>
 8001000:	2f00      	cmp	r7, #0
 8001002:	f000 80d2 	beq.w	80011aa <_printf_i+0x1c6>
 8001006:	2f58      	cmp	r7, #88	@ 0x58
 8001008:	f000 80b9 	beq.w	800117e <_printf_i+0x19a>
 800100c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001010:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001014:	e03a      	b.n	800108c <_printf_i+0xa8>
 8001016:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800101a:	2b15      	cmp	r3, #21
 800101c:	d8f6      	bhi.n	800100c <_printf_i+0x28>
 800101e:	a101      	add	r1, pc, #4	@ (adr r1, 8001024 <_printf_i+0x40>)
 8001020:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001024:	0800107d 	.word	0x0800107d
 8001028:	08001091 	.word	0x08001091
 800102c:	0800100d 	.word	0x0800100d
 8001030:	0800100d 	.word	0x0800100d
 8001034:	0800100d 	.word	0x0800100d
 8001038:	0800100d 	.word	0x0800100d
 800103c:	08001091 	.word	0x08001091
 8001040:	0800100d 	.word	0x0800100d
 8001044:	0800100d 	.word	0x0800100d
 8001048:	0800100d 	.word	0x0800100d
 800104c:	0800100d 	.word	0x0800100d
 8001050:	08001191 	.word	0x08001191
 8001054:	080010bb 	.word	0x080010bb
 8001058:	0800114b 	.word	0x0800114b
 800105c:	0800100d 	.word	0x0800100d
 8001060:	0800100d 	.word	0x0800100d
 8001064:	080011b3 	.word	0x080011b3
 8001068:	0800100d 	.word	0x0800100d
 800106c:	080010bb 	.word	0x080010bb
 8001070:	0800100d 	.word	0x0800100d
 8001074:	0800100d 	.word	0x0800100d
 8001078:	08001153 	.word	0x08001153
 800107c:	6833      	ldr	r3, [r6, #0]
 800107e:	1d1a      	adds	r2, r3, #4
 8001080:	681b      	ldr	r3, [r3, #0]
 8001082:	6032      	str	r2, [r6, #0]
 8001084:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001088:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800108c:	2301      	movs	r3, #1
 800108e:	e09d      	b.n	80011cc <_printf_i+0x1e8>
 8001090:	6833      	ldr	r3, [r6, #0]
 8001092:	6820      	ldr	r0, [r4, #0]
 8001094:	1d19      	adds	r1, r3, #4
 8001096:	6031      	str	r1, [r6, #0]
 8001098:	0606      	lsls	r6, r0, #24
 800109a:	d501      	bpl.n	80010a0 <_printf_i+0xbc>
 800109c:	681d      	ldr	r5, [r3, #0]
 800109e:	e003      	b.n	80010a8 <_printf_i+0xc4>
 80010a0:	0645      	lsls	r5, r0, #25
 80010a2:	d5fb      	bpl.n	800109c <_printf_i+0xb8>
 80010a4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80010a8:	2d00      	cmp	r5, #0
 80010aa:	da03      	bge.n	80010b4 <_printf_i+0xd0>
 80010ac:	232d      	movs	r3, #45	@ 0x2d
 80010ae:	426d      	negs	r5, r5
 80010b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80010b4:	4859      	ldr	r0, [pc, #356]	@ (800121c <_printf_i+0x238>)
 80010b6:	230a      	movs	r3, #10
 80010b8:	e011      	b.n	80010de <_printf_i+0xfa>
 80010ba:	6821      	ldr	r1, [r4, #0]
 80010bc:	6833      	ldr	r3, [r6, #0]
 80010be:	0608      	lsls	r0, r1, #24
 80010c0:	f853 5b04 	ldr.w	r5, [r3], #4
 80010c4:	d402      	bmi.n	80010cc <_printf_i+0xe8>
 80010c6:	0649      	lsls	r1, r1, #25
 80010c8:	bf48      	it	mi
 80010ca:	b2ad      	uxthmi	r5, r5
 80010cc:	2f6f      	cmp	r7, #111	@ 0x6f
 80010ce:	4853      	ldr	r0, [pc, #332]	@ (800121c <_printf_i+0x238>)
 80010d0:	6033      	str	r3, [r6, #0]
 80010d2:	bf14      	ite	ne
 80010d4:	230a      	movne	r3, #10
 80010d6:	2308      	moveq	r3, #8
 80010d8:	2100      	movs	r1, #0
 80010da:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80010de:	6866      	ldr	r6, [r4, #4]
 80010e0:	60a6      	str	r6, [r4, #8]
 80010e2:	2e00      	cmp	r6, #0
 80010e4:	bfa2      	ittt	ge
 80010e6:	6821      	ldrge	r1, [r4, #0]
 80010e8:	f021 0104 	bicge.w	r1, r1, #4
 80010ec:	6021      	strge	r1, [r4, #0]
 80010ee:	b90d      	cbnz	r5, 80010f4 <_printf_i+0x110>
 80010f0:	2e00      	cmp	r6, #0
 80010f2:	d04b      	beq.n	800118c <_printf_i+0x1a8>
 80010f4:	4616      	mov	r6, r2
 80010f6:	fbb5 f1f3 	udiv	r1, r5, r3
 80010fa:	fb03 5711 	mls	r7, r3, r1, r5
 80010fe:	5dc7      	ldrb	r7, [r0, r7]
 8001100:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001104:	462f      	mov	r7, r5
 8001106:	42bb      	cmp	r3, r7
 8001108:	460d      	mov	r5, r1
 800110a:	d9f4      	bls.n	80010f6 <_printf_i+0x112>
 800110c:	2b08      	cmp	r3, #8
 800110e:	d10b      	bne.n	8001128 <_printf_i+0x144>
 8001110:	6823      	ldr	r3, [r4, #0]
 8001112:	07df      	lsls	r7, r3, #31
 8001114:	d508      	bpl.n	8001128 <_printf_i+0x144>
 8001116:	6923      	ldr	r3, [r4, #16]
 8001118:	6861      	ldr	r1, [r4, #4]
 800111a:	4299      	cmp	r1, r3
 800111c:	bfde      	ittt	le
 800111e:	2330      	movle	r3, #48	@ 0x30
 8001120:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001124:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001128:	1b92      	subs	r2, r2, r6
 800112a:	6122      	str	r2, [r4, #16]
 800112c:	f8cd a000 	str.w	sl, [sp]
 8001130:	464b      	mov	r3, r9
 8001132:	aa03      	add	r2, sp, #12
 8001134:	4621      	mov	r1, r4
 8001136:	4640      	mov	r0, r8
 8001138:	f7ff fee6 	bl	8000f08 <_printf_common>
 800113c:	3001      	adds	r0, #1
 800113e:	d14a      	bne.n	80011d6 <_printf_i+0x1f2>
 8001140:	f04f 30ff 	mov.w	r0, #4294967295
 8001144:	b004      	add	sp, #16
 8001146:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800114a:	6823      	ldr	r3, [r4, #0]
 800114c:	f043 0320 	orr.w	r3, r3, #32
 8001150:	6023      	str	r3, [r4, #0]
 8001152:	4833      	ldr	r0, [pc, #204]	@ (8001220 <_printf_i+0x23c>)
 8001154:	2778      	movs	r7, #120	@ 0x78
 8001156:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800115a:	6823      	ldr	r3, [r4, #0]
 800115c:	6831      	ldr	r1, [r6, #0]
 800115e:	061f      	lsls	r7, r3, #24
 8001160:	f851 5b04 	ldr.w	r5, [r1], #4
 8001164:	d402      	bmi.n	800116c <_printf_i+0x188>
 8001166:	065f      	lsls	r7, r3, #25
 8001168:	bf48      	it	mi
 800116a:	b2ad      	uxthmi	r5, r5
 800116c:	6031      	str	r1, [r6, #0]
 800116e:	07d9      	lsls	r1, r3, #31
 8001170:	bf44      	itt	mi
 8001172:	f043 0320 	orrmi.w	r3, r3, #32
 8001176:	6023      	strmi	r3, [r4, #0]
 8001178:	b11d      	cbz	r5, 8001182 <_printf_i+0x19e>
 800117a:	2310      	movs	r3, #16
 800117c:	e7ac      	b.n	80010d8 <_printf_i+0xf4>
 800117e:	4827      	ldr	r0, [pc, #156]	@ (800121c <_printf_i+0x238>)
 8001180:	e7e9      	b.n	8001156 <_printf_i+0x172>
 8001182:	6823      	ldr	r3, [r4, #0]
 8001184:	f023 0320 	bic.w	r3, r3, #32
 8001188:	6023      	str	r3, [r4, #0]
 800118a:	e7f6      	b.n	800117a <_printf_i+0x196>
 800118c:	4616      	mov	r6, r2
 800118e:	e7bd      	b.n	800110c <_printf_i+0x128>
 8001190:	6833      	ldr	r3, [r6, #0]
 8001192:	6825      	ldr	r5, [r4, #0]
 8001194:	6961      	ldr	r1, [r4, #20]
 8001196:	1d18      	adds	r0, r3, #4
 8001198:	6030      	str	r0, [r6, #0]
 800119a:	062e      	lsls	r6, r5, #24
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	d501      	bpl.n	80011a4 <_printf_i+0x1c0>
 80011a0:	6019      	str	r1, [r3, #0]
 80011a2:	e002      	b.n	80011aa <_printf_i+0x1c6>
 80011a4:	0668      	lsls	r0, r5, #25
 80011a6:	d5fb      	bpl.n	80011a0 <_printf_i+0x1bc>
 80011a8:	8019      	strh	r1, [r3, #0]
 80011aa:	2300      	movs	r3, #0
 80011ac:	6123      	str	r3, [r4, #16]
 80011ae:	4616      	mov	r6, r2
 80011b0:	e7bc      	b.n	800112c <_printf_i+0x148>
 80011b2:	6833      	ldr	r3, [r6, #0]
 80011b4:	1d1a      	adds	r2, r3, #4
 80011b6:	6032      	str	r2, [r6, #0]
 80011b8:	681e      	ldr	r6, [r3, #0]
 80011ba:	6862      	ldr	r2, [r4, #4]
 80011bc:	2100      	movs	r1, #0
 80011be:	4630      	mov	r0, r6
 80011c0:	f7ff f806 	bl	80001d0 <memchr>
 80011c4:	b108      	cbz	r0, 80011ca <_printf_i+0x1e6>
 80011c6:	1b80      	subs	r0, r0, r6
 80011c8:	6060      	str	r0, [r4, #4]
 80011ca:	6863      	ldr	r3, [r4, #4]
 80011cc:	6123      	str	r3, [r4, #16]
 80011ce:	2300      	movs	r3, #0
 80011d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011d4:	e7aa      	b.n	800112c <_printf_i+0x148>
 80011d6:	6923      	ldr	r3, [r4, #16]
 80011d8:	4632      	mov	r2, r6
 80011da:	4649      	mov	r1, r9
 80011dc:	4640      	mov	r0, r8
 80011de:	47d0      	blx	sl
 80011e0:	3001      	adds	r0, #1
 80011e2:	d0ad      	beq.n	8001140 <_printf_i+0x15c>
 80011e4:	6823      	ldr	r3, [r4, #0]
 80011e6:	079b      	lsls	r3, r3, #30
 80011e8:	d413      	bmi.n	8001212 <_printf_i+0x22e>
 80011ea:	68e0      	ldr	r0, [r4, #12]
 80011ec:	9b03      	ldr	r3, [sp, #12]
 80011ee:	4298      	cmp	r0, r3
 80011f0:	bfb8      	it	lt
 80011f2:	4618      	movlt	r0, r3
 80011f4:	e7a6      	b.n	8001144 <_printf_i+0x160>
 80011f6:	2301      	movs	r3, #1
 80011f8:	4632      	mov	r2, r6
 80011fa:	4649      	mov	r1, r9
 80011fc:	4640      	mov	r0, r8
 80011fe:	47d0      	blx	sl
 8001200:	3001      	adds	r0, #1
 8001202:	d09d      	beq.n	8001140 <_printf_i+0x15c>
 8001204:	3501      	adds	r5, #1
 8001206:	68e3      	ldr	r3, [r4, #12]
 8001208:	9903      	ldr	r1, [sp, #12]
 800120a:	1a5b      	subs	r3, r3, r1
 800120c:	42ab      	cmp	r3, r5
 800120e:	dcf2      	bgt.n	80011f6 <_printf_i+0x212>
 8001210:	e7eb      	b.n	80011ea <_printf_i+0x206>
 8001212:	2500      	movs	r5, #0
 8001214:	f104 0619 	add.w	r6, r4, #25
 8001218:	e7f5      	b.n	8001206 <_printf_i+0x222>
 800121a:	bf00      	nop
 800121c:	08001817 	.word	0x08001817
 8001220:	08001828 	.word	0x08001828

08001224 <__sflush_r>:
 8001224:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800122a:	0716      	lsls	r6, r2, #28
 800122c:	4605      	mov	r5, r0
 800122e:	460c      	mov	r4, r1
 8001230:	d454      	bmi.n	80012dc <__sflush_r+0xb8>
 8001232:	684b      	ldr	r3, [r1, #4]
 8001234:	2b00      	cmp	r3, #0
 8001236:	dc02      	bgt.n	800123e <__sflush_r+0x1a>
 8001238:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800123a:	2b00      	cmp	r3, #0
 800123c:	dd48      	ble.n	80012d0 <__sflush_r+0xac>
 800123e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001240:	2e00      	cmp	r6, #0
 8001242:	d045      	beq.n	80012d0 <__sflush_r+0xac>
 8001244:	2300      	movs	r3, #0
 8001246:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800124a:	682f      	ldr	r7, [r5, #0]
 800124c:	6a21      	ldr	r1, [r4, #32]
 800124e:	602b      	str	r3, [r5, #0]
 8001250:	d030      	beq.n	80012b4 <__sflush_r+0x90>
 8001252:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001254:	89a3      	ldrh	r3, [r4, #12]
 8001256:	0759      	lsls	r1, r3, #29
 8001258:	d505      	bpl.n	8001266 <__sflush_r+0x42>
 800125a:	6863      	ldr	r3, [r4, #4]
 800125c:	1ad2      	subs	r2, r2, r3
 800125e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001260:	b10b      	cbz	r3, 8001266 <__sflush_r+0x42>
 8001262:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001264:	1ad2      	subs	r2, r2, r3
 8001266:	2300      	movs	r3, #0
 8001268:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800126a:	6a21      	ldr	r1, [r4, #32]
 800126c:	4628      	mov	r0, r5
 800126e:	47b0      	blx	r6
 8001270:	1c43      	adds	r3, r0, #1
 8001272:	89a3      	ldrh	r3, [r4, #12]
 8001274:	d106      	bne.n	8001284 <__sflush_r+0x60>
 8001276:	6829      	ldr	r1, [r5, #0]
 8001278:	291d      	cmp	r1, #29
 800127a:	d82b      	bhi.n	80012d4 <__sflush_r+0xb0>
 800127c:	4a28      	ldr	r2, [pc, #160]	@ (8001320 <__sflush_r+0xfc>)
 800127e:	410a      	asrs	r2, r1
 8001280:	07d6      	lsls	r6, r2, #31
 8001282:	d427      	bmi.n	80012d4 <__sflush_r+0xb0>
 8001284:	2200      	movs	r2, #0
 8001286:	6062      	str	r2, [r4, #4]
 8001288:	04d9      	lsls	r1, r3, #19
 800128a:	6922      	ldr	r2, [r4, #16]
 800128c:	6022      	str	r2, [r4, #0]
 800128e:	d504      	bpl.n	800129a <__sflush_r+0x76>
 8001290:	1c42      	adds	r2, r0, #1
 8001292:	d101      	bne.n	8001298 <__sflush_r+0x74>
 8001294:	682b      	ldr	r3, [r5, #0]
 8001296:	b903      	cbnz	r3, 800129a <__sflush_r+0x76>
 8001298:	6560      	str	r0, [r4, #84]	@ 0x54
 800129a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800129c:	602f      	str	r7, [r5, #0]
 800129e:	b1b9      	cbz	r1, 80012d0 <__sflush_r+0xac>
 80012a0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80012a4:	4299      	cmp	r1, r3
 80012a6:	d002      	beq.n	80012ae <__sflush_r+0x8a>
 80012a8:	4628      	mov	r0, r5
 80012aa:	f7ff fbed 	bl	8000a88 <_free_r>
 80012ae:	2300      	movs	r3, #0
 80012b0:	6363      	str	r3, [r4, #52]	@ 0x34
 80012b2:	e00d      	b.n	80012d0 <__sflush_r+0xac>
 80012b4:	2301      	movs	r3, #1
 80012b6:	4628      	mov	r0, r5
 80012b8:	47b0      	blx	r6
 80012ba:	4602      	mov	r2, r0
 80012bc:	1c50      	adds	r0, r2, #1
 80012be:	d1c9      	bne.n	8001254 <__sflush_r+0x30>
 80012c0:	682b      	ldr	r3, [r5, #0]
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d0c6      	beq.n	8001254 <__sflush_r+0x30>
 80012c6:	2b1d      	cmp	r3, #29
 80012c8:	d001      	beq.n	80012ce <__sflush_r+0xaa>
 80012ca:	2b16      	cmp	r3, #22
 80012cc:	d11d      	bne.n	800130a <__sflush_r+0xe6>
 80012ce:	602f      	str	r7, [r5, #0]
 80012d0:	2000      	movs	r0, #0
 80012d2:	e021      	b.n	8001318 <__sflush_r+0xf4>
 80012d4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012d8:	b21b      	sxth	r3, r3
 80012da:	e01a      	b.n	8001312 <__sflush_r+0xee>
 80012dc:	690f      	ldr	r7, [r1, #16]
 80012de:	2f00      	cmp	r7, #0
 80012e0:	d0f6      	beq.n	80012d0 <__sflush_r+0xac>
 80012e2:	0793      	lsls	r3, r2, #30
 80012e4:	680e      	ldr	r6, [r1, #0]
 80012e6:	bf08      	it	eq
 80012e8:	694b      	ldreq	r3, [r1, #20]
 80012ea:	600f      	str	r7, [r1, #0]
 80012ec:	bf18      	it	ne
 80012ee:	2300      	movne	r3, #0
 80012f0:	1bf6      	subs	r6, r6, r7
 80012f2:	608b      	str	r3, [r1, #8]
 80012f4:	2e00      	cmp	r6, #0
 80012f6:	ddeb      	ble.n	80012d0 <__sflush_r+0xac>
 80012f8:	6a21      	ldr	r1, [r4, #32]
 80012fa:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80012fe:	4633      	mov	r3, r6
 8001300:	463a      	mov	r2, r7
 8001302:	4628      	mov	r0, r5
 8001304:	47e0      	blx	ip
 8001306:	2800      	cmp	r0, #0
 8001308:	dc07      	bgt.n	800131a <__sflush_r+0xf6>
 800130a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800130e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001312:	81a3      	strh	r3, [r4, #12]
 8001314:	f04f 30ff 	mov.w	r0, #4294967295
 8001318:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800131a:	4407      	add	r7, r0
 800131c:	1a36      	subs	r6, r6, r0
 800131e:	e7e9      	b.n	80012f4 <__sflush_r+0xd0>
 8001320:	dfbffffe 	.word	0xdfbffffe

08001324 <_fflush_r>:
 8001324:	b538      	push	{r3, r4, r5, lr}
 8001326:	690b      	ldr	r3, [r1, #16]
 8001328:	4605      	mov	r5, r0
 800132a:	460c      	mov	r4, r1
 800132c:	b913      	cbnz	r3, 8001334 <_fflush_r+0x10>
 800132e:	2500      	movs	r5, #0
 8001330:	4628      	mov	r0, r5
 8001332:	bd38      	pop	{r3, r4, r5, pc}
 8001334:	b118      	cbz	r0, 800133e <_fflush_r+0x1a>
 8001336:	6a03      	ldr	r3, [r0, #32]
 8001338:	b90b      	cbnz	r3, 800133e <_fflush_r+0x1a>
 800133a:	f7ff fa77 	bl	800082c <__sinit>
 800133e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001342:	2b00      	cmp	r3, #0
 8001344:	d0f3      	beq.n	800132e <_fflush_r+0xa>
 8001346:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001348:	07d0      	lsls	r0, r2, #31
 800134a:	d404      	bmi.n	8001356 <_fflush_r+0x32>
 800134c:	0599      	lsls	r1, r3, #22
 800134e:	d402      	bmi.n	8001356 <_fflush_r+0x32>
 8001350:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001352:	f7ff fb78 	bl	8000a46 <__retarget_lock_acquire_recursive>
 8001356:	4628      	mov	r0, r5
 8001358:	4621      	mov	r1, r4
 800135a:	f7ff ff63 	bl	8001224 <__sflush_r>
 800135e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001360:	07da      	lsls	r2, r3, #31
 8001362:	4605      	mov	r5, r0
 8001364:	d4e4      	bmi.n	8001330 <_fflush_r+0xc>
 8001366:	89a3      	ldrh	r3, [r4, #12]
 8001368:	059b      	lsls	r3, r3, #22
 800136a:	d4e1      	bmi.n	8001330 <_fflush_r+0xc>
 800136c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800136e:	f7ff fb6b 	bl	8000a48 <__retarget_lock_release_recursive>
 8001372:	e7dd      	b.n	8001330 <_fflush_r+0xc>

08001374 <fiprintf>:
 8001374:	b40e      	push	{r1, r2, r3}
 8001376:	b503      	push	{r0, r1, lr}
 8001378:	4601      	mov	r1, r0
 800137a:	ab03      	add	r3, sp, #12
 800137c:	4805      	ldr	r0, [pc, #20]	@ (8001394 <fiprintf+0x20>)
 800137e:	f853 2b04 	ldr.w	r2, [r3], #4
 8001382:	6800      	ldr	r0, [r0, #0]
 8001384:	9301      	str	r3, [sp, #4]
 8001386:	f7ff fca7 	bl	8000cd8 <_vfiprintf_r>
 800138a:	b002      	add	sp, #8
 800138c:	f85d eb04 	ldr.w	lr, [sp], #4
 8001390:	b003      	add	sp, #12
 8001392:	4770      	bx	lr
 8001394:	20000054 	.word	0x20000054

08001398 <_putc_r>:
 8001398:	b570      	push	{r4, r5, r6, lr}
 800139a:	460d      	mov	r5, r1
 800139c:	4614      	mov	r4, r2
 800139e:	4606      	mov	r6, r0
 80013a0:	b118      	cbz	r0, 80013aa <_putc_r+0x12>
 80013a2:	6a03      	ldr	r3, [r0, #32]
 80013a4:	b90b      	cbnz	r3, 80013aa <_putc_r+0x12>
 80013a6:	f7ff fa41 	bl	800082c <__sinit>
 80013aa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80013ac:	07d8      	lsls	r0, r3, #31
 80013ae:	d405      	bmi.n	80013bc <_putc_r+0x24>
 80013b0:	89a3      	ldrh	r3, [r4, #12]
 80013b2:	0599      	lsls	r1, r3, #22
 80013b4:	d402      	bmi.n	80013bc <_putc_r+0x24>
 80013b6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80013b8:	f7ff fb45 	bl	8000a46 <__retarget_lock_acquire_recursive>
 80013bc:	68a3      	ldr	r3, [r4, #8]
 80013be:	3b01      	subs	r3, #1
 80013c0:	2b00      	cmp	r3, #0
 80013c2:	60a3      	str	r3, [r4, #8]
 80013c4:	da05      	bge.n	80013d2 <_putc_r+0x3a>
 80013c6:	69a2      	ldr	r2, [r4, #24]
 80013c8:	4293      	cmp	r3, r2
 80013ca:	db12      	blt.n	80013f2 <_putc_r+0x5a>
 80013cc:	b2eb      	uxtb	r3, r5
 80013ce:	2b0a      	cmp	r3, #10
 80013d0:	d00f      	beq.n	80013f2 <_putc_r+0x5a>
 80013d2:	6823      	ldr	r3, [r4, #0]
 80013d4:	1c5a      	adds	r2, r3, #1
 80013d6:	6022      	str	r2, [r4, #0]
 80013d8:	701d      	strb	r5, [r3, #0]
 80013da:	b2ed      	uxtb	r5, r5
 80013dc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80013de:	07da      	lsls	r2, r3, #31
 80013e0:	d405      	bmi.n	80013ee <_putc_r+0x56>
 80013e2:	89a3      	ldrh	r3, [r4, #12]
 80013e4:	059b      	lsls	r3, r3, #22
 80013e6:	d402      	bmi.n	80013ee <_putc_r+0x56>
 80013e8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80013ea:	f7ff fb2d 	bl	8000a48 <__retarget_lock_release_recursive>
 80013ee:	4628      	mov	r0, r5
 80013f0:	bd70      	pop	{r4, r5, r6, pc}
 80013f2:	4629      	mov	r1, r5
 80013f4:	4622      	mov	r2, r4
 80013f6:	4630      	mov	r0, r6
 80013f8:	f000 f802 	bl	8001400 <__swbuf_r>
 80013fc:	4605      	mov	r5, r0
 80013fe:	e7ed      	b.n	80013dc <_putc_r+0x44>

08001400 <__swbuf_r>:
 8001400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001402:	460e      	mov	r6, r1
 8001404:	4614      	mov	r4, r2
 8001406:	4605      	mov	r5, r0
 8001408:	b118      	cbz	r0, 8001412 <__swbuf_r+0x12>
 800140a:	6a03      	ldr	r3, [r0, #32]
 800140c:	b90b      	cbnz	r3, 8001412 <__swbuf_r+0x12>
 800140e:	f7ff fa0d 	bl	800082c <__sinit>
 8001412:	69a3      	ldr	r3, [r4, #24]
 8001414:	60a3      	str	r3, [r4, #8]
 8001416:	89a3      	ldrh	r3, [r4, #12]
 8001418:	071a      	lsls	r2, r3, #28
 800141a:	d501      	bpl.n	8001420 <__swbuf_r+0x20>
 800141c:	6923      	ldr	r3, [r4, #16]
 800141e:	b943      	cbnz	r3, 8001432 <__swbuf_r+0x32>
 8001420:	4621      	mov	r1, r4
 8001422:	4628      	mov	r0, r5
 8001424:	f000 f82a 	bl	800147c <__swsetup_r>
 8001428:	b118      	cbz	r0, 8001432 <__swbuf_r+0x32>
 800142a:	f04f 37ff 	mov.w	r7, #4294967295
 800142e:	4638      	mov	r0, r7
 8001430:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001432:	6823      	ldr	r3, [r4, #0]
 8001434:	6922      	ldr	r2, [r4, #16]
 8001436:	1a98      	subs	r0, r3, r2
 8001438:	6963      	ldr	r3, [r4, #20]
 800143a:	b2f6      	uxtb	r6, r6
 800143c:	4283      	cmp	r3, r0
 800143e:	4637      	mov	r7, r6
 8001440:	dc05      	bgt.n	800144e <__swbuf_r+0x4e>
 8001442:	4621      	mov	r1, r4
 8001444:	4628      	mov	r0, r5
 8001446:	f7ff ff6d 	bl	8001324 <_fflush_r>
 800144a:	2800      	cmp	r0, #0
 800144c:	d1ed      	bne.n	800142a <__swbuf_r+0x2a>
 800144e:	68a3      	ldr	r3, [r4, #8]
 8001450:	3b01      	subs	r3, #1
 8001452:	60a3      	str	r3, [r4, #8]
 8001454:	6823      	ldr	r3, [r4, #0]
 8001456:	1c5a      	adds	r2, r3, #1
 8001458:	6022      	str	r2, [r4, #0]
 800145a:	701e      	strb	r6, [r3, #0]
 800145c:	6962      	ldr	r2, [r4, #20]
 800145e:	1c43      	adds	r3, r0, #1
 8001460:	429a      	cmp	r2, r3
 8001462:	d004      	beq.n	800146e <__swbuf_r+0x6e>
 8001464:	89a3      	ldrh	r3, [r4, #12]
 8001466:	07db      	lsls	r3, r3, #31
 8001468:	d5e1      	bpl.n	800142e <__swbuf_r+0x2e>
 800146a:	2e0a      	cmp	r6, #10
 800146c:	d1df      	bne.n	800142e <__swbuf_r+0x2e>
 800146e:	4621      	mov	r1, r4
 8001470:	4628      	mov	r0, r5
 8001472:	f7ff ff57 	bl	8001324 <_fflush_r>
 8001476:	2800      	cmp	r0, #0
 8001478:	d0d9      	beq.n	800142e <__swbuf_r+0x2e>
 800147a:	e7d6      	b.n	800142a <__swbuf_r+0x2a>

0800147c <__swsetup_r>:
 800147c:	b538      	push	{r3, r4, r5, lr}
 800147e:	4b29      	ldr	r3, [pc, #164]	@ (8001524 <__swsetup_r+0xa8>)
 8001480:	4605      	mov	r5, r0
 8001482:	6818      	ldr	r0, [r3, #0]
 8001484:	460c      	mov	r4, r1
 8001486:	b118      	cbz	r0, 8001490 <__swsetup_r+0x14>
 8001488:	6a03      	ldr	r3, [r0, #32]
 800148a:	b90b      	cbnz	r3, 8001490 <__swsetup_r+0x14>
 800148c:	f7ff f9ce 	bl	800082c <__sinit>
 8001490:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001494:	0719      	lsls	r1, r3, #28
 8001496:	d422      	bmi.n	80014de <__swsetup_r+0x62>
 8001498:	06da      	lsls	r2, r3, #27
 800149a:	d407      	bmi.n	80014ac <__swsetup_r+0x30>
 800149c:	2209      	movs	r2, #9
 800149e:	602a      	str	r2, [r5, #0]
 80014a0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80014a4:	81a3      	strh	r3, [r4, #12]
 80014a6:	f04f 30ff 	mov.w	r0, #4294967295
 80014aa:	e033      	b.n	8001514 <__swsetup_r+0x98>
 80014ac:	0758      	lsls	r0, r3, #29
 80014ae:	d512      	bpl.n	80014d6 <__swsetup_r+0x5a>
 80014b0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80014b2:	b141      	cbz	r1, 80014c6 <__swsetup_r+0x4a>
 80014b4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80014b8:	4299      	cmp	r1, r3
 80014ba:	d002      	beq.n	80014c2 <__swsetup_r+0x46>
 80014bc:	4628      	mov	r0, r5
 80014be:	f7ff fae3 	bl	8000a88 <_free_r>
 80014c2:	2300      	movs	r3, #0
 80014c4:	6363      	str	r3, [r4, #52]	@ 0x34
 80014c6:	89a3      	ldrh	r3, [r4, #12]
 80014c8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80014cc:	81a3      	strh	r3, [r4, #12]
 80014ce:	2300      	movs	r3, #0
 80014d0:	6063      	str	r3, [r4, #4]
 80014d2:	6923      	ldr	r3, [r4, #16]
 80014d4:	6023      	str	r3, [r4, #0]
 80014d6:	89a3      	ldrh	r3, [r4, #12]
 80014d8:	f043 0308 	orr.w	r3, r3, #8
 80014dc:	81a3      	strh	r3, [r4, #12]
 80014de:	6923      	ldr	r3, [r4, #16]
 80014e0:	b94b      	cbnz	r3, 80014f6 <__swsetup_r+0x7a>
 80014e2:	89a3      	ldrh	r3, [r4, #12]
 80014e4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80014e8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80014ec:	d003      	beq.n	80014f6 <__swsetup_r+0x7a>
 80014ee:	4621      	mov	r1, r4
 80014f0:	4628      	mov	r0, r5
 80014f2:	f000 f856 	bl	80015a2 <__smakebuf_r>
 80014f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014fa:	f013 0201 	ands.w	r2, r3, #1
 80014fe:	d00a      	beq.n	8001516 <__swsetup_r+0x9a>
 8001500:	2200      	movs	r2, #0
 8001502:	60a2      	str	r2, [r4, #8]
 8001504:	6962      	ldr	r2, [r4, #20]
 8001506:	4252      	negs	r2, r2
 8001508:	61a2      	str	r2, [r4, #24]
 800150a:	6922      	ldr	r2, [r4, #16]
 800150c:	b942      	cbnz	r2, 8001520 <__swsetup_r+0xa4>
 800150e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001512:	d1c5      	bne.n	80014a0 <__swsetup_r+0x24>
 8001514:	bd38      	pop	{r3, r4, r5, pc}
 8001516:	0799      	lsls	r1, r3, #30
 8001518:	bf58      	it	pl
 800151a:	6962      	ldrpl	r2, [r4, #20]
 800151c:	60a2      	str	r2, [r4, #8]
 800151e:	e7f4      	b.n	800150a <__swsetup_r+0x8e>
 8001520:	2000      	movs	r0, #0
 8001522:	e7f7      	b.n	8001514 <__swsetup_r+0x98>
 8001524:	20000054 	.word	0x20000054

08001528 <_sbrk_r>:
 8001528:	b538      	push	{r3, r4, r5, lr}
 800152a:	4d06      	ldr	r5, [pc, #24]	@ (8001544 <_sbrk_r+0x1c>)
 800152c:	2300      	movs	r3, #0
 800152e:	4604      	mov	r4, r0
 8001530:	4608      	mov	r0, r1
 8001532:	602b      	str	r3, [r5, #0]
 8001534:	f7ff f850 	bl	80005d8 <_sbrk>
 8001538:	1c43      	adds	r3, r0, #1
 800153a:	d102      	bne.n	8001542 <_sbrk_r+0x1a>
 800153c:	682b      	ldr	r3, [r5, #0]
 800153e:	b103      	cbz	r3, 8001542 <_sbrk_r+0x1a>
 8001540:	6023      	str	r3, [r4, #0]
 8001542:	bd38      	pop	{r3, r4, r5, pc}
 8001544:	20000200 	.word	0x20000200

08001548 <abort>:
 8001548:	b508      	push	{r3, lr}
 800154a:	2006      	movs	r0, #6
 800154c:	f000 f88e 	bl	800166c <raise>
 8001550:	2001      	movs	r0, #1
 8001552:	f7fe ffcc 	bl	80004ee <_exit>

08001556 <__swhatbuf_r>:
 8001556:	b570      	push	{r4, r5, r6, lr}
 8001558:	460c      	mov	r4, r1
 800155a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800155e:	2900      	cmp	r1, #0
 8001560:	b096      	sub	sp, #88	@ 0x58
 8001562:	4615      	mov	r5, r2
 8001564:	461e      	mov	r6, r3
 8001566:	da0d      	bge.n	8001584 <__swhatbuf_r+0x2e>
 8001568:	89a3      	ldrh	r3, [r4, #12]
 800156a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800156e:	f04f 0100 	mov.w	r1, #0
 8001572:	bf14      	ite	ne
 8001574:	2340      	movne	r3, #64	@ 0x40
 8001576:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800157a:	2000      	movs	r0, #0
 800157c:	6031      	str	r1, [r6, #0]
 800157e:	602b      	str	r3, [r5, #0]
 8001580:	b016      	add	sp, #88	@ 0x58
 8001582:	bd70      	pop	{r4, r5, r6, pc}
 8001584:	466a      	mov	r2, sp
 8001586:	f000 f879 	bl	800167c <_fstat_r>
 800158a:	2800      	cmp	r0, #0
 800158c:	dbec      	blt.n	8001568 <__swhatbuf_r+0x12>
 800158e:	9901      	ldr	r1, [sp, #4]
 8001590:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001594:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001598:	4259      	negs	r1, r3
 800159a:	4159      	adcs	r1, r3
 800159c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80015a0:	e7eb      	b.n	800157a <__swhatbuf_r+0x24>

080015a2 <__smakebuf_r>:
 80015a2:	898b      	ldrh	r3, [r1, #12]
 80015a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80015a6:	079d      	lsls	r5, r3, #30
 80015a8:	4606      	mov	r6, r0
 80015aa:	460c      	mov	r4, r1
 80015ac:	d507      	bpl.n	80015be <__smakebuf_r+0x1c>
 80015ae:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80015b2:	6023      	str	r3, [r4, #0]
 80015b4:	6123      	str	r3, [r4, #16]
 80015b6:	2301      	movs	r3, #1
 80015b8:	6163      	str	r3, [r4, #20]
 80015ba:	b003      	add	sp, #12
 80015bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015be:	ab01      	add	r3, sp, #4
 80015c0:	466a      	mov	r2, sp
 80015c2:	f7ff ffc8 	bl	8001556 <__swhatbuf_r>
 80015c6:	9f00      	ldr	r7, [sp, #0]
 80015c8:	4605      	mov	r5, r0
 80015ca:	4639      	mov	r1, r7
 80015cc:	4630      	mov	r0, r6
 80015ce:	f7ff facf 	bl	8000b70 <_malloc_r>
 80015d2:	b948      	cbnz	r0, 80015e8 <__smakebuf_r+0x46>
 80015d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80015d8:	059a      	lsls	r2, r3, #22
 80015da:	d4ee      	bmi.n	80015ba <__smakebuf_r+0x18>
 80015dc:	f023 0303 	bic.w	r3, r3, #3
 80015e0:	f043 0302 	orr.w	r3, r3, #2
 80015e4:	81a3      	strh	r3, [r4, #12]
 80015e6:	e7e2      	b.n	80015ae <__smakebuf_r+0xc>
 80015e8:	89a3      	ldrh	r3, [r4, #12]
 80015ea:	6020      	str	r0, [r4, #0]
 80015ec:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80015f0:	81a3      	strh	r3, [r4, #12]
 80015f2:	9b01      	ldr	r3, [sp, #4]
 80015f4:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80015f8:	b15b      	cbz	r3, 8001612 <__smakebuf_r+0x70>
 80015fa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80015fe:	4630      	mov	r0, r6
 8001600:	f000 f84e 	bl	80016a0 <_isatty_r>
 8001604:	b128      	cbz	r0, 8001612 <__smakebuf_r+0x70>
 8001606:	89a3      	ldrh	r3, [r4, #12]
 8001608:	f023 0303 	bic.w	r3, r3, #3
 800160c:	f043 0301 	orr.w	r3, r3, #1
 8001610:	81a3      	strh	r3, [r4, #12]
 8001612:	89a3      	ldrh	r3, [r4, #12]
 8001614:	431d      	orrs	r5, r3
 8001616:	81a5      	strh	r5, [r4, #12]
 8001618:	e7cf      	b.n	80015ba <__smakebuf_r+0x18>

0800161a <_raise_r>:
 800161a:	291f      	cmp	r1, #31
 800161c:	b538      	push	{r3, r4, r5, lr}
 800161e:	4605      	mov	r5, r0
 8001620:	460c      	mov	r4, r1
 8001622:	d904      	bls.n	800162e <_raise_r+0x14>
 8001624:	2316      	movs	r3, #22
 8001626:	6003      	str	r3, [r0, #0]
 8001628:	f04f 30ff 	mov.w	r0, #4294967295
 800162c:	bd38      	pop	{r3, r4, r5, pc}
 800162e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8001630:	b112      	cbz	r2, 8001638 <_raise_r+0x1e>
 8001632:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001636:	b94b      	cbnz	r3, 800164c <_raise_r+0x32>
 8001638:	4628      	mov	r0, r5
 800163a:	f000 f853 	bl	80016e4 <_getpid_r>
 800163e:	4622      	mov	r2, r4
 8001640:	4601      	mov	r1, r0
 8001642:	4628      	mov	r0, r5
 8001644:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001648:	f000 b83a 	b.w	80016c0 <_kill_r>
 800164c:	2b01      	cmp	r3, #1
 800164e:	d00a      	beq.n	8001666 <_raise_r+0x4c>
 8001650:	1c59      	adds	r1, r3, #1
 8001652:	d103      	bne.n	800165c <_raise_r+0x42>
 8001654:	2316      	movs	r3, #22
 8001656:	6003      	str	r3, [r0, #0]
 8001658:	2001      	movs	r0, #1
 800165a:	e7e7      	b.n	800162c <_raise_r+0x12>
 800165c:	2100      	movs	r1, #0
 800165e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8001662:	4620      	mov	r0, r4
 8001664:	4798      	blx	r3
 8001666:	2000      	movs	r0, #0
 8001668:	e7e0      	b.n	800162c <_raise_r+0x12>
	...

0800166c <raise>:
 800166c:	4b02      	ldr	r3, [pc, #8]	@ (8001678 <raise+0xc>)
 800166e:	4601      	mov	r1, r0
 8001670:	6818      	ldr	r0, [r3, #0]
 8001672:	f7ff bfd2 	b.w	800161a <_raise_r>
 8001676:	bf00      	nop
 8001678:	20000054 	.word	0x20000054

0800167c <_fstat_r>:
 800167c:	b538      	push	{r3, r4, r5, lr}
 800167e:	4d07      	ldr	r5, [pc, #28]	@ (800169c <_fstat_r+0x20>)
 8001680:	2300      	movs	r3, #0
 8001682:	4604      	mov	r4, r0
 8001684:	4608      	mov	r0, r1
 8001686:	4611      	mov	r1, r2
 8001688:	602b      	str	r3, [r5, #0]
 800168a:	f7fe ff7f 	bl	800058c <_fstat>
 800168e:	1c43      	adds	r3, r0, #1
 8001690:	d102      	bne.n	8001698 <_fstat_r+0x1c>
 8001692:	682b      	ldr	r3, [r5, #0]
 8001694:	b103      	cbz	r3, 8001698 <_fstat_r+0x1c>
 8001696:	6023      	str	r3, [r4, #0]
 8001698:	bd38      	pop	{r3, r4, r5, pc}
 800169a:	bf00      	nop
 800169c:	20000200 	.word	0x20000200

080016a0 <_isatty_r>:
 80016a0:	b538      	push	{r3, r4, r5, lr}
 80016a2:	4d06      	ldr	r5, [pc, #24]	@ (80016bc <_isatty_r+0x1c>)
 80016a4:	2300      	movs	r3, #0
 80016a6:	4604      	mov	r4, r0
 80016a8:	4608      	mov	r0, r1
 80016aa:	602b      	str	r3, [r5, #0]
 80016ac:	f7fe ff7d 	bl	80005aa <_isatty>
 80016b0:	1c43      	adds	r3, r0, #1
 80016b2:	d102      	bne.n	80016ba <_isatty_r+0x1a>
 80016b4:	682b      	ldr	r3, [r5, #0]
 80016b6:	b103      	cbz	r3, 80016ba <_isatty_r+0x1a>
 80016b8:	6023      	str	r3, [r4, #0]
 80016ba:	bd38      	pop	{r3, r4, r5, pc}
 80016bc:	20000200 	.word	0x20000200

080016c0 <_kill_r>:
 80016c0:	b538      	push	{r3, r4, r5, lr}
 80016c2:	4d07      	ldr	r5, [pc, #28]	@ (80016e0 <_kill_r+0x20>)
 80016c4:	2300      	movs	r3, #0
 80016c6:	4604      	mov	r4, r0
 80016c8:	4608      	mov	r0, r1
 80016ca:	4611      	mov	r1, r2
 80016cc:	602b      	str	r3, [r5, #0]
 80016ce:	f7fe fefe 	bl	80004ce <_kill>
 80016d2:	1c43      	adds	r3, r0, #1
 80016d4:	d102      	bne.n	80016dc <_kill_r+0x1c>
 80016d6:	682b      	ldr	r3, [r5, #0]
 80016d8:	b103      	cbz	r3, 80016dc <_kill_r+0x1c>
 80016da:	6023      	str	r3, [r4, #0]
 80016dc:	bd38      	pop	{r3, r4, r5, pc}
 80016de:	bf00      	nop
 80016e0:	20000200 	.word	0x20000200

080016e4 <_getpid_r>:
 80016e4:	f7fe beec 	b.w	80004c0 <_getpid>

080016e8 <_init>:
 80016e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016ea:	bf00      	nop
 80016ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016ee:	bc08      	pop	{r3}
 80016f0:	469e      	mov	lr, r3
 80016f2:	4770      	bx	lr

080016f4 <_fini>:
 80016f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016f6:	bf00      	nop
 80016f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016fa:	bc08      	pop	{r3}
 80016fc:	469e      	mov	lr, r3
 80016fe:	4770      	bx	lr
